# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am 3638 2009-08-31 12:49:23Z mtjspaan $

# $Id: Makefile.custom 2964 2008-11-02 16:44:12Z mtjspaan $
# Contains several project-wide Makefile options

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Make-rules \
	$(top_srcdir)/src/Makefile.custom
noinst_PROGRAMS =
bin_PROGRAMS = $(am__EXEEXT_1)
subdir = src/utils
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__EXEEXT_1 = printJointPolicyPureVector$(EXEEXT) \
	printProblem$(EXEEXT) analyzeRewardResults$(EXEEXT) \
	getAvgReward$(EXEEXT) evaluateRandomPolicy$(EXEEXT) \
	evaluateJointPolicyPureVector$(EXEEXT) \
	evaluatePerseusPolicy$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_analyzeRewardResults_OBJECTS =  \
	analyzeRewardResults-analyzeRewardResults.$(OBJEXT)
analyzeRewardResults_OBJECTS = $(am_analyzeRewardResults_OBJECTS)
am__DEPENDENCIES_1 =
analyzeRewardResults_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(analyzeRewardResults_CXXFLAGS) $(CXXFLAGS) \
	$(analyzeRewardResults_LDFLAGS) $(LDFLAGS) -o $@
am_evaluateJointPolicyPureVector_OBJECTS = evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.$(OBJEXT)
evaluateJointPolicyPureVector_OBJECTS =  \
	$(am_evaluateJointPolicyPureVector_OBJECTS)
evaluateJointPolicyPureVector_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(evaluateJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) \
	$(evaluateJointPolicyPureVector_LDFLAGS) $(LDFLAGS) -o $@
am_evaluatePerseusPolicy_OBJECTS =  \
	evaluatePerseusPolicy-evaluatePerseusPolicy.$(OBJEXT)
evaluatePerseusPolicy_OBJECTS = $(am_evaluatePerseusPolicy_OBJECTS)
evaluatePerseusPolicy_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(evaluatePerseusPolicy_CXXFLAGS) $(CXXFLAGS) \
	$(evaluatePerseusPolicy_LDFLAGS) $(LDFLAGS) -o $@
am_evaluateRandomPolicy_OBJECTS =  \
	evaluateRandomPolicy-evaluateRandomPolicy.$(OBJEXT)
evaluateRandomPolicy_OBJECTS = $(am_evaluateRandomPolicy_OBJECTS)
evaluateRandomPolicy_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(evaluateRandomPolicy_CXXFLAGS) $(CXXFLAGS) \
	$(evaluateRandomPolicy_LDFLAGS) $(LDFLAGS) -o $@
am_getAvgReward_OBJECTS = getAvgReward-getAvgReward.$(OBJEXT)
getAvgReward_OBJECTS = $(am_getAvgReward_OBJECTS)
getAvgReward_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(getAvgReward_CXXFLAGS) \
	$(CXXFLAGS) $(getAvgReward_LDFLAGS) $(LDFLAGS) -o $@
am_printJointPolicyPureVector_OBJECTS = printJointPolicyPureVector-printJointPolicyPureVector.$(OBJEXT)
printJointPolicyPureVector_OBJECTS =  \
	$(am_printJointPolicyPureVector_OBJECTS)
printJointPolicyPureVector_LINK = $(LIBTOOL) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(printJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) \
	$(printJointPolicyPureVector_LDFLAGS) $(LDFLAGS) -o $@
am_printProblem_OBJECTS = printProblem-printProblem.$(OBJEXT)
printProblem_OBJECTS = $(am_printProblem_OBJECTS)
printProblem_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(printProblem_CXXFLAGS) \
	$(CXXFLAGS) $(printProblem_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(analyzeRewardResults_SOURCES) \
	$(evaluateJointPolicyPureVector_SOURCES) \
	$(evaluatePerseusPolicy_SOURCES) \
	$(evaluateRandomPolicy_SOURCES) $(getAvgReward_SOURCES) \
	$(printJointPolicyPureVector_SOURCES) $(printProblem_SOURCES)
DIST_SOURCES = $(analyzeRewardResults_SOURCES) \
	$(evaluateJointPolicyPureVector_SOURCES) \
	$(evaluatePerseusPolicy_SOURCES) \
	$(evaluateRandomPolicy_SOURCES) $(getAvgReward_SOURCES) \
	$(printJointPolicyPureVector_SOURCES) $(printProblem_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# the debug flags used - according to 
# http://sourceware.org/gdb/current/onlinedocs/gdb_13.html#SEC111
# dwarf-2 is best for c++ and gdb
DEBUG_FLAG = -gdwarf-2

# Optimization flags used for building normal and profiling libraries.
# -DNDEBUG speeds up the boost::numeric::ublas operations
CPP_OPTIMIZATION_FLAGS = -O3 -DNDEBUG
# Machine architecture specific flags
MARCH_FLAGS = 
MADP_INCLUDES = -I$(top_srcdir)/src/base -I$(top_srcdir)/src/include\
 -I$(top_srcdir)/src/support -I$(top_srcdir)/src/planning\
 -I$(top_srcdir)/src/parser\
 -isystem$(top_srcdir)/src/boost

MADP_LD = 

# Lists of libs to be linked with binaries.
# Note that the linking order matters, in order to correctly resolve symbols
MADPLIBS_NORMAL_NOPARSER_NOPLANNING = \
$(top_builddir)/src/base/libMADPBase.la

MADPLIBS_NORMAL_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanning.la\
 $(top_builddir)/src/support/libMADPSupport.la\
 $(MADPLIBS_NORMAL_NOPARSER_NOPLANNING)

MADPLIBS_NORMAL_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParser.la\
 $(MADPLIBS_NORMAL_NOPARSER_NOPLANNING)

MADPLIBS_NORMAL = \
 $(top_builddir)/src/parser/libMADPParser.la $(MADPLIBS_NORMAL_NOPARSER)

MADPLIBS_DEBUG_NOPARSER_NOPLANNING = \
 $(top_builddir)/src/base/libMADPBaseDebug.a

MADPLIBS_DEBUG_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanningDebug.a\
 $(top_builddir)/src/support/libMADPSupportDebug.a\
 $(MADPLIBS_DEBUG_NOPARSER_NOPLANNING)

MADPLIBS_DEBUG_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParserDebug.a\
 $(MADPLIBS_DEBUG_NOPARSER_NOPLANNING)

MADPLIBS_DEBUG = \
 $(top_builddir)/src/parser/libMADPParserDebug.a $(MADPLIBS_DEBUG_NOPARSER)

MADPLIBS_PROFILE_NOPARSER_NOPLANNING = \
 $(top_builddir)/src/base/libMADPBaseProfile.la

MADPLIBS_PROFILE_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanningProfile.la\
 $(top_builddir)/src/support/libMADPSupportProfile.la\
 $(MADPLIBS_PROFILE_NOPARSER_NOPLANNING)

MADPLIBS_PROFILE_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParserProfile.la\
 $(MADPLIBS_PROFILE_NOPARSER_NOPLANNING)

MADPLIBS_PROFILE = \
 $(top_builddir)/src/parser/libMADPParserProfile.la $(MADPLIBS_PROFILE_NOPARSER)


# Which programs to build. Only PROGRAMS_NORMAL will be installed.
PROGRAMS_NORMAL = printJointPolicyPureVector printProblem \
 analyzeRewardResults getAvgReward evaluateRandomPolicy \
 evaluateJointPolicyPureVector evaluatePerseusPolicy


##############
# Includedirs, libdirs, libs and cflags for all programs 
INCLUDES = -I.. $(MADP_INCLUDES)
AM_LDFLAGS = 
LDADD = 
AM_CPPFLAGS = -Wall -pipe $(MARCH_FLAGS)

# Build printJointPolicyPureVector
printJointPolicyPureVector_SOURCES = printJointPolicyPureVector.cpp
printJointPolicyPureVector_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
printJointPolicyPureVector_LDFLAGS = $(AM_LDFLAGS) 
printJointPolicyPureVector_DEPENDENCIES = $(MADPLIBS_NORMAL)
printJointPolicyPureVector_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
printJointPolicyPureVector_CXXFLAGS = 
printJointPolicyPureVector_CFLAGS = 

# Build printProblem
printProblem_SOURCES = printProblem.cpp
printProblem_LDADD = $(MADPLIBS_NORMAL_NOPLANNING) $(MADP_LD)
printProblem_LDFLAGS = $(AM_LDFLAGS) 
printProblem_DEPENDENCIES = $(MADPLIBS_NORMAL_NOPLANNING)
printProblem_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
printProblem_CXXFLAGS = 
printProblem_CFLAGS = 

# Build analyzeRewardResults
analyzeRewardResults_SOURCES = analyzeRewardResults.cpp
analyzeRewardResults_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
analyzeRewardResults_LDFLAGS = $(AM_LDFLAGS) 
analyzeRewardResults_DEPENDENCIES = $(MADPLIBS_NORMAL_NOPARSER)
analyzeRewardResults_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
analyzeRewardResults_CXXFLAGS = 
analyzeRewardResults_CFLAGS = 

# Build getAvgReward
getAvgReward_SOURCES = getAvgReward.cpp
getAvgReward_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
getAvgReward_LDFLAGS = $(AM_LDFLAGS) 
getAvgReward_DEPENDENCIES = $(MADPLIBS_NORMAL)
getAvgReward_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
getAvgReward_CXXFLAGS = 
getAvgReward_CFLAGS = 

# Build evaluateRandomPolicy
evaluateRandomPolicy_SOURCES = evaluateRandomPolicy.cpp
evaluateRandomPolicy_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
evaluateRandomPolicy_LDFLAGS = $(AM_LDFLAGS) 
evaluateRandomPolicy_DEPENDENCIES = $(MADPLIBS_NORMAL)
evaluateRandomPolicy_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
evaluateRandomPolicy_CXXFLAGS = 
evaluateRandomPolicy_CFLAGS = 

# Build evaluateJointPolicyPureVector
evaluateJointPolicyPureVector_SOURCES = evaluateJointPolicyPureVector.cpp
evaluateJointPolicyPureVector_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
evaluateJointPolicyPureVector_LDFLAGS = $(AM_LDFLAGS) 
evaluateJointPolicyPureVector_DEPENDENCIES = $(MADPLIBS_NORMAL)
evaluateJointPolicyPureVector_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
evaluateJointPolicyPureVector_CXXFLAGS = 
evaluateJointPolicyPureVector_CFLAGS = 

# Build evaluatePerseusPolicy
evaluatePerseusPolicy_SOURCES = evaluatePerseusPolicy.cpp
evaluatePerseusPolicy_LDADD = $(MADPLIBS_NORMAL) $(MADP_LD)
evaluatePerseusPolicy_LDFLAGS = $(AM_LDFLAGS) 
evaluatePerseusPolicy_DEPENDENCIES = $(MADPLIBS_NORMAL)
evaluatePerseusPolicy_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
evaluatePerseusPolicy_CXXFLAGS = 
evaluatePerseusPolicy_CFLAGS = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/utils/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/utils/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
analyzeRewardResults$(EXEEXT): $(analyzeRewardResults_OBJECTS) $(analyzeRewardResults_DEPENDENCIES) 
	@rm -f analyzeRewardResults$(EXEEXT)
	$(analyzeRewardResults_LINK) $(analyzeRewardResults_OBJECTS) $(analyzeRewardResults_LDADD) $(LIBS)
evaluateJointPolicyPureVector$(EXEEXT): $(evaluateJointPolicyPureVector_OBJECTS) $(evaluateJointPolicyPureVector_DEPENDENCIES) 
	@rm -f evaluateJointPolicyPureVector$(EXEEXT)
	$(evaluateJointPolicyPureVector_LINK) $(evaluateJointPolicyPureVector_OBJECTS) $(evaluateJointPolicyPureVector_LDADD) $(LIBS)
evaluatePerseusPolicy$(EXEEXT): $(evaluatePerseusPolicy_OBJECTS) $(evaluatePerseusPolicy_DEPENDENCIES) 
	@rm -f evaluatePerseusPolicy$(EXEEXT)
	$(evaluatePerseusPolicy_LINK) $(evaluatePerseusPolicy_OBJECTS) $(evaluatePerseusPolicy_LDADD) $(LIBS)
evaluateRandomPolicy$(EXEEXT): $(evaluateRandomPolicy_OBJECTS) $(evaluateRandomPolicy_DEPENDENCIES) 
	@rm -f evaluateRandomPolicy$(EXEEXT)
	$(evaluateRandomPolicy_LINK) $(evaluateRandomPolicy_OBJECTS) $(evaluateRandomPolicy_LDADD) $(LIBS)
getAvgReward$(EXEEXT): $(getAvgReward_OBJECTS) $(getAvgReward_DEPENDENCIES) 
	@rm -f getAvgReward$(EXEEXT)
	$(getAvgReward_LINK) $(getAvgReward_OBJECTS) $(getAvgReward_LDADD) $(LIBS)
printJointPolicyPureVector$(EXEEXT): $(printJointPolicyPureVector_OBJECTS) $(printJointPolicyPureVector_DEPENDENCIES) 
	@rm -f printJointPolicyPureVector$(EXEEXT)
	$(printJointPolicyPureVector_LINK) $(printJointPolicyPureVector_OBJECTS) $(printJointPolicyPureVector_LDADD) $(LIBS)
printProblem$(EXEEXT): $(printProblem_OBJECTS) $(printProblem_DEPENDENCIES) 
	@rm -f printProblem$(EXEEXT)
	$(printProblem_LINK) $(printProblem_OBJECTS) $(printProblem_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/analyzeRewardResults-analyzeRewardResults.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evaluatePerseusPolicy-evaluatePerseusPolicy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/evaluateRandomPolicy-evaluateRandomPolicy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/getAvgReward-getAvgReward.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/printJointPolicyPureVector-printJointPolicyPureVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/printProblem-printProblem.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

analyzeRewardResults-analyzeRewardResults.o: analyzeRewardResults.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(analyzeRewardResults_CPPFLAGS) $(CPPFLAGS) $(analyzeRewardResults_CXXFLAGS) $(CXXFLAGS) -MT analyzeRewardResults-analyzeRewardResults.o -MD -MP -MF $(DEPDIR)/analyzeRewardResults-analyzeRewardResults.Tpo -c -o analyzeRewardResults-analyzeRewardResults.o `test -f 'analyzeRewardResults.cpp' || echo '$(srcdir)/'`analyzeRewardResults.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/analyzeRewardResults-analyzeRewardResults.Tpo $(DEPDIR)/analyzeRewardResults-analyzeRewardResults.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='analyzeRewardResults.cpp' object='analyzeRewardResults-analyzeRewardResults.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(analyzeRewardResults_CPPFLAGS) $(CPPFLAGS) $(analyzeRewardResults_CXXFLAGS) $(CXXFLAGS) -c -o analyzeRewardResults-analyzeRewardResults.o `test -f 'analyzeRewardResults.cpp' || echo '$(srcdir)/'`analyzeRewardResults.cpp

analyzeRewardResults-analyzeRewardResults.obj: analyzeRewardResults.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(analyzeRewardResults_CPPFLAGS) $(CPPFLAGS) $(analyzeRewardResults_CXXFLAGS) $(CXXFLAGS) -MT analyzeRewardResults-analyzeRewardResults.obj -MD -MP -MF $(DEPDIR)/analyzeRewardResults-analyzeRewardResults.Tpo -c -o analyzeRewardResults-analyzeRewardResults.obj `if test -f 'analyzeRewardResults.cpp'; then $(CYGPATH_W) 'analyzeRewardResults.cpp'; else $(CYGPATH_W) '$(srcdir)/analyzeRewardResults.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/analyzeRewardResults-analyzeRewardResults.Tpo $(DEPDIR)/analyzeRewardResults-analyzeRewardResults.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='analyzeRewardResults.cpp' object='analyzeRewardResults-analyzeRewardResults.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(analyzeRewardResults_CPPFLAGS) $(CPPFLAGS) $(analyzeRewardResults_CXXFLAGS) $(CXXFLAGS) -c -o analyzeRewardResults-analyzeRewardResults.obj `if test -f 'analyzeRewardResults.cpp'; then $(CYGPATH_W) 'analyzeRewardResults.cpp'; else $(CYGPATH_W) '$(srcdir)/analyzeRewardResults.cpp'; fi`

evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.o: evaluateJointPolicyPureVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluateJointPolicyPureVector_CPPFLAGS) $(CPPFLAGS) $(evaluateJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) -MT evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.o -MD -MP -MF $(DEPDIR)/evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.Tpo -c -o evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.o `test -f 'evaluateJointPolicyPureVector.cpp' || echo '$(srcdir)/'`evaluateJointPolicyPureVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.Tpo $(DEPDIR)/evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='evaluateJointPolicyPureVector.cpp' object='evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluateJointPolicyPureVector_CPPFLAGS) $(CPPFLAGS) $(evaluateJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) -c -o evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.o `test -f 'evaluateJointPolicyPureVector.cpp' || echo '$(srcdir)/'`evaluateJointPolicyPureVector.cpp

evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.obj: evaluateJointPolicyPureVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluateJointPolicyPureVector_CPPFLAGS) $(CPPFLAGS) $(evaluateJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) -MT evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.obj -MD -MP -MF $(DEPDIR)/evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.Tpo -c -o evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.obj `if test -f 'evaluateJointPolicyPureVector.cpp'; then $(CYGPATH_W) 'evaluateJointPolicyPureVector.cpp'; else $(CYGPATH_W) '$(srcdir)/evaluateJointPolicyPureVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.Tpo $(DEPDIR)/evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='evaluateJointPolicyPureVector.cpp' object='evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluateJointPolicyPureVector_CPPFLAGS) $(CPPFLAGS) $(evaluateJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) -c -o evaluateJointPolicyPureVector-evaluateJointPolicyPureVector.obj `if test -f 'evaluateJointPolicyPureVector.cpp'; then $(CYGPATH_W) 'evaluateJointPolicyPureVector.cpp'; else $(CYGPATH_W) '$(srcdir)/evaluateJointPolicyPureVector.cpp'; fi`

evaluatePerseusPolicy-evaluatePerseusPolicy.o: evaluatePerseusPolicy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluatePerseusPolicy_CPPFLAGS) $(CPPFLAGS) $(evaluatePerseusPolicy_CXXFLAGS) $(CXXFLAGS) -MT evaluatePerseusPolicy-evaluatePerseusPolicy.o -MD -MP -MF $(DEPDIR)/evaluatePerseusPolicy-evaluatePerseusPolicy.Tpo -c -o evaluatePerseusPolicy-evaluatePerseusPolicy.o `test -f 'evaluatePerseusPolicy.cpp' || echo '$(srcdir)/'`evaluatePerseusPolicy.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/evaluatePerseusPolicy-evaluatePerseusPolicy.Tpo $(DEPDIR)/evaluatePerseusPolicy-evaluatePerseusPolicy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='evaluatePerseusPolicy.cpp' object='evaluatePerseusPolicy-evaluatePerseusPolicy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluatePerseusPolicy_CPPFLAGS) $(CPPFLAGS) $(evaluatePerseusPolicy_CXXFLAGS) $(CXXFLAGS) -c -o evaluatePerseusPolicy-evaluatePerseusPolicy.o `test -f 'evaluatePerseusPolicy.cpp' || echo '$(srcdir)/'`evaluatePerseusPolicy.cpp

evaluatePerseusPolicy-evaluatePerseusPolicy.obj: evaluatePerseusPolicy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluatePerseusPolicy_CPPFLAGS) $(CPPFLAGS) $(evaluatePerseusPolicy_CXXFLAGS) $(CXXFLAGS) -MT evaluatePerseusPolicy-evaluatePerseusPolicy.obj -MD -MP -MF $(DEPDIR)/evaluatePerseusPolicy-evaluatePerseusPolicy.Tpo -c -o evaluatePerseusPolicy-evaluatePerseusPolicy.obj `if test -f 'evaluatePerseusPolicy.cpp'; then $(CYGPATH_W) 'evaluatePerseusPolicy.cpp'; else $(CYGPATH_W) '$(srcdir)/evaluatePerseusPolicy.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/evaluatePerseusPolicy-evaluatePerseusPolicy.Tpo $(DEPDIR)/evaluatePerseusPolicy-evaluatePerseusPolicy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='evaluatePerseusPolicy.cpp' object='evaluatePerseusPolicy-evaluatePerseusPolicy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluatePerseusPolicy_CPPFLAGS) $(CPPFLAGS) $(evaluatePerseusPolicy_CXXFLAGS) $(CXXFLAGS) -c -o evaluatePerseusPolicy-evaluatePerseusPolicy.obj `if test -f 'evaluatePerseusPolicy.cpp'; then $(CYGPATH_W) 'evaluatePerseusPolicy.cpp'; else $(CYGPATH_W) '$(srcdir)/evaluatePerseusPolicy.cpp'; fi`

evaluateRandomPolicy-evaluateRandomPolicy.o: evaluateRandomPolicy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluateRandomPolicy_CPPFLAGS) $(CPPFLAGS) $(evaluateRandomPolicy_CXXFLAGS) $(CXXFLAGS) -MT evaluateRandomPolicy-evaluateRandomPolicy.o -MD -MP -MF $(DEPDIR)/evaluateRandomPolicy-evaluateRandomPolicy.Tpo -c -o evaluateRandomPolicy-evaluateRandomPolicy.o `test -f 'evaluateRandomPolicy.cpp' || echo '$(srcdir)/'`evaluateRandomPolicy.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/evaluateRandomPolicy-evaluateRandomPolicy.Tpo $(DEPDIR)/evaluateRandomPolicy-evaluateRandomPolicy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='evaluateRandomPolicy.cpp' object='evaluateRandomPolicy-evaluateRandomPolicy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluateRandomPolicy_CPPFLAGS) $(CPPFLAGS) $(evaluateRandomPolicy_CXXFLAGS) $(CXXFLAGS) -c -o evaluateRandomPolicy-evaluateRandomPolicy.o `test -f 'evaluateRandomPolicy.cpp' || echo '$(srcdir)/'`evaluateRandomPolicy.cpp

evaluateRandomPolicy-evaluateRandomPolicy.obj: evaluateRandomPolicy.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluateRandomPolicy_CPPFLAGS) $(CPPFLAGS) $(evaluateRandomPolicy_CXXFLAGS) $(CXXFLAGS) -MT evaluateRandomPolicy-evaluateRandomPolicy.obj -MD -MP -MF $(DEPDIR)/evaluateRandomPolicy-evaluateRandomPolicy.Tpo -c -o evaluateRandomPolicy-evaluateRandomPolicy.obj `if test -f 'evaluateRandomPolicy.cpp'; then $(CYGPATH_W) 'evaluateRandomPolicy.cpp'; else $(CYGPATH_W) '$(srcdir)/evaluateRandomPolicy.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/evaluateRandomPolicy-evaluateRandomPolicy.Tpo $(DEPDIR)/evaluateRandomPolicy-evaluateRandomPolicy.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='evaluateRandomPolicy.cpp' object='evaluateRandomPolicy-evaluateRandomPolicy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(evaluateRandomPolicy_CPPFLAGS) $(CPPFLAGS) $(evaluateRandomPolicy_CXXFLAGS) $(CXXFLAGS) -c -o evaluateRandomPolicy-evaluateRandomPolicy.obj `if test -f 'evaluateRandomPolicy.cpp'; then $(CYGPATH_W) 'evaluateRandomPolicy.cpp'; else $(CYGPATH_W) '$(srcdir)/evaluateRandomPolicy.cpp'; fi`

getAvgReward-getAvgReward.o: getAvgReward.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(getAvgReward_CPPFLAGS) $(CPPFLAGS) $(getAvgReward_CXXFLAGS) $(CXXFLAGS) -MT getAvgReward-getAvgReward.o -MD -MP -MF $(DEPDIR)/getAvgReward-getAvgReward.Tpo -c -o getAvgReward-getAvgReward.o `test -f 'getAvgReward.cpp' || echo '$(srcdir)/'`getAvgReward.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/getAvgReward-getAvgReward.Tpo $(DEPDIR)/getAvgReward-getAvgReward.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='getAvgReward.cpp' object='getAvgReward-getAvgReward.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(getAvgReward_CPPFLAGS) $(CPPFLAGS) $(getAvgReward_CXXFLAGS) $(CXXFLAGS) -c -o getAvgReward-getAvgReward.o `test -f 'getAvgReward.cpp' || echo '$(srcdir)/'`getAvgReward.cpp

getAvgReward-getAvgReward.obj: getAvgReward.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(getAvgReward_CPPFLAGS) $(CPPFLAGS) $(getAvgReward_CXXFLAGS) $(CXXFLAGS) -MT getAvgReward-getAvgReward.obj -MD -MP -MF $(DEPDIR)/getAvgReward-getAvgReward.Tpo -c -o getAvgReward-getAvgReward.obj `if test -f 'getAvgReward.cpp'; then $(CYGPATH_W) 'getAvgReward.cpp'; else $(CYGPATH_W) '$(srcdir)/getAvgReward.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/getAvgReward-getAvgReward.Tpo $(DEPDIR)/getAvgReward-getAvgReward.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='getAvgReward.cpp' object='getAvgReward-getAvgReward.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(getAvgReward_CPPFLAGS) $(CPPFLAGS) $(getAvgReward_CXXFLAGS) $(CXXFLAGS) -c -o getAvgReward-getAvgReward.obj `if test -f 'getAvgReward.cpp'; then $(CYGPATH_W) 'getAvgReward.cpp'; else $(CYGPATH_W) '$(srcdir)/getAvgReward.cpp'; fi`

printJointPolicyPureVector-printJointPolicyPureVector.o: printJointPolicyPureVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(printJointPolicyPureVector_CPPFLAGS) $(CPPFLAGS) $(printJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) -MT printJointPolicyPureVector-printJointPolicyPureVector.o -MD -MP -MF $(DEPDIR)/printJointPolicyPureVector-printJointPolicyPureVector.Tpo -c -o printJointPolicyPureVector-printJointPolicyPureVector.o `test -f 'printJointPolicyPureVector.cpp' || echo '$(srcdir)/'`printJointPolicyPureVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/printJointPolicyPureVector-printJointPolicyPureVector.Tpo $(DEPDIR)/printJointPolicyPureVector-printJointPolicyPureVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='printJointPolicyPureVector.cpp' object='printJointPolicyPureVector-printJointPolicyPureVector.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(printJointPolicyPureVector_CPPFLAGS) $(CPPFLAGS) $(printJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) -c -o printJointPolicyPureVector-printJointPolicyPureVector.o `test -f 'printJointPolicyPureVector.cpp' || echo '$(srcdir)/'`printJointPolicyPureVector.cpp

printJointPolicyPureVector-printJointPolicyPureVector.obj: printJointPolicyPureVector.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(printJointPolicyPureVector_CPPFLAGS) $(CPPFLAGS) $(printJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) -MT printJointPolicyPureVector-printJointPolicyPureVector.obj -MD -MP -MF $(DEPDIR)/printJointPolicyPureVector-printJointPolicyPureVector.Tpo -c -o printJointPolicyPureVector-printJointPolicyPureVector.obj `if test -f 'printJointPolicyPureVector.cpp'; then $(CYGPATH_W) 'printJointPolicyPureVector.cpp'; else $(CYGPATH_W) '$(srcdir)/printJointPolicyPureVector.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/printJointPolicyPureVector-printJointPolicyPureVector.Tpo $(DEPDIR)/printJointPolicyPureVector-printJointPolicyPureVector.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='printJointPolicyPureVector.cpp' object='printJointPolicyPureVector-printJointPolicyPureVector.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(printJointPolicyPureVector_CPPFLAGS) $(CPPFLAGS) $(printJointPolicyPureVector_CXXFLAGS) $(CXXFLAGS) -c -o printJointPolicyPureVector-printJointPolicyPureVector.obj `if test -f 'printJointPolicyPureVector.cpp'; then $(CYGPATH_W) 'printJointPolicyPureVector.cpp'; else $(CYGPATH_W) '$(srcdir)/printJointPolicyPureVector.cpp'; fi`

printProblem-printProblem.o: printProblem.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(printProblem_CPPFLAGS) $(CPPFLAGS) $(printProblem_CXXFLAGS) $(CXXFLAGS) -MT printProblem-printProblem.o -MD -MP -MF $(DEPDIR)/printProblem-printProblem.Tpo -c -o printProblem-printProblem.o `test -f 'printProblem.cpp' || echo '$(srcdir)/'`printProblem.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/printProblem-printProblem.Tpo $(DEPDIR)/printProblem-printProblem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='printProblem.cpp' object='printProblem-printProblem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(printProblem_CPPFLAGS) $(CPPFLAGS) $(printProblem_CXXFLAGS) $(CXXFLAGS) -c -o printProblem-printProblem.o `test -f 'printProblem.cpp' || echo '$(srcdir)/'`printProblem.cpp

printProblem-printProblem.obj: printProblem.cpp
@am__fastdepCXX_TRUE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(printProblem_CPPFLAGS) $(CPPFLAGS) $(printProblem_CXXFLAGS) $(CXXFLAGS) -MT printProblem-printProblem.obj -MD -MP -MF $(DEPDIR)/printProblem-printProblem.Tpo -c -o printProblem-printProblem.obj `if test -f 'printProblem.cpp'; then $(CYGPATH_W) 'printProblem.cpp'; else $(CYGPATH_W) '$(srcdir)/printProblem.cpp'; fi`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/printProblem-printProblem.Tpo $(DEPDIR)/printProblem-printProblem.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='printProblem.cpp' object='printProblem-printProblem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(printProblem_CPPFLAGS) $(CPPFLAGS) $(printProblem_CXXFLAGS) $(CXXFLAGS) -c -o printProblem-printProblem.obj `if test -f 'printProblem.cpp'; then $(CYGPATH_W) 'printProblem.cpp'; else $(CYGPATH_W) '$(srcdir)/printProblem.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-noinstPROGRAMS ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
