# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am 4016 2010-03-11 16:56:02Z mtjspaan $

# $Id: Makefile.custom 2964 2008-11-02 16:44:12Z mtjspaan $
# Contains several project-wide Makefile options

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Make-rules \
	$(top_srcdir)/src/Makefile.custom
subdir = src/base
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libMADPBase_la_LIBADD =
am__objects_1 = libMADPBase_la-JointActionDiscrete.lo \
	libMADPBase_la-JointObservationDiscrete.lo \
	libMADPBase_la-TransitionModelDiscrete.lo \
	libMADPBase_la-ObservationModelDiscrete.lo \
	libMADPBase_la-TransitionModelMapping.lo \
	libMADPBase_la-ObservationModelMapping.lo \
	libMADPBase_la-RewardModelMapping.lo \
	libMADPBase_la-RewardModelMappingSparse.lo \
	libMADPBase_la-RewardModelTOISparse.lo \
	libMADPBase_la-MultiAgentDecisionProcess.lo \
	libMADPBase_la-MultiAgentDecisionProcessDiscrete.lo \
	libMADPBase_la-TransitionObservationIndependentMADPDiscrete.lo \
	libMADPBase_la-TOIDecPOMDPDiscrete.lo \
	libMADPBase_la-TOIDecMDPDiscrete.lo \
	libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.lo \
	libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.lo \
	libMADPBase_la-MADPComponentDiscreteActions.lo \
	libMADPBase_la-MADPComponentDiscreteObservations.lo \
	libMADPBase_la-MADPComponentDiscreteStates.lo \
	libMADPBase_la-DecPOMDP.lo libMADPBase_la-DecPOMDPDiscrete.lo \
	libMADPBase_la-POSG.lo libMADPBase_la-POSGDiscrete.lo \
	libMADPBase_la-TransitionModelMappingSparse.lo \
	libMADPBase_la-ObservationModelMappingSparse.lo
am__objects_2 =
am__objects_3 = $(am__objects_2)
am__objects_4 = libMADPBase_la-NamedDescribedEntity.lo \
	libMADPBase_la-IndexTools.lo libMADPBase_la-Globals.lo \
	libMADPBase_la-VectorTools.lo libMADPBase_la-TimeTools.lo \
	libMADPBase_la-StringTools.lo
am__objects_5 = $(am__objects_1) $(am__objects_3) $(am__objects_4) \
	$(am__objects_3)
am_libMADPBase_la_OBJECTS = $(am__objects_5)
libMADPBase_la_OBJECTS = $(am_libMADPBase_la_OBJECTS)
libMADPBase_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libMADPBase_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libMADPBase_la_SOURCES)
DIST_SOURCES = $(libMADPBase_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# the debug flags used - according to 
# http://sourceware.org/gdb/current/onlinedocs/gdb_13.html#SEC111
# dwarf-2 is best for c++ and gdb
DEBUG_FLAG = -gdwarf-2

# Optimization flags used for building normal and profiling libraries.
# -DNDEBUG speeds up the boost::numeric::ublas operations
CPP_OPTIMIZATION_FLAGS = -O3 -DNDEBUG
# Machine architecture specific flags
MARCH_FLAGS = 
MADP_INCLUDES = -I$(top_srcdir)/src/base -I$(top_srcdir)/src/include\
 -I$(top_srcdir)/src/support -I$(top_srcdir)/src/planning\
 -I$(top_srcdir)/src/parser\
 -isystem$(top_srcdir)/src/boost

MADP_LD = 

# Lists of libs to be linked with binaries.
# Note that the linking order matters, in order to correctly resolve symbols
MADPLIBS_NORMAL_NOPARSER_NOPLANNING = \
$(top_builddir)/src/base/libMADPBase.la

MADPLIBS_NORMAL_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanning.la\
 $(top_builddir)/src/support/libMADPSupport.la\
 $(MADPLIBS_NORMAL_NOPARSER_NOPLANNING)

MADPLIBS_NORMAL_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParser.la\
 $(MADPLIBS_NORMAL_NOPARSER_NOPLANNING)

MADPLIBS_NORMAL = \
 $(top_builddir)/src/parser/libMADPParser.la $(MADPLIBS_NORMAL_NOPARSER)

MADPLIBS_DEBUG_NOPARSER_NOPLANNING = \
 $(top_builddir)/src/base/libMADPBaseDebug.a

MADPLIBS_DEBUG_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanningDebug.a\
 $(top_builddir)/src/support/libMADPSupportDebug.a\
 $(MADPLIBS_DEBUG_NOPARSER_NOPLANNING)

MADPLIBS_DEBUG_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParserDebug.a\
 $(MADPLIBS_DEBUG_NOPARSER_NOPLANNING)

MADPLIBS_DEBUG = \
 $(top_builddir)/src/parser/libMADPParserDebug.a $(MADPLIBS_DEBUG_NOPARSER)

MADPLIBS_PROFILE_NOPARSER_NOPLANNING = \
 $(top_builddir)/src/base/libMADPBaseProfile.la

MADPLIBS_PROFILE_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanningProfile.la\
 $(top_builddir)/src/support/libMADPSupportProfile.la\
 $(MADPLIBS_PROFILE_NOPARSER_NOPLANNING)

MADPLIBS_PROFILE_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParserProfile.la\
 $(MADPLIBS_PROFILE_NOPARSER_NOPLANNING)

MADPLIBS_PROFILE = \
 $(top_builddir)/src/parser/libMADPParserProfile.la $(MADPLIBS_PROFILE_NOPARSER)


##############
# Includedirs, libdirs, libs and cflags for all programs 
INCLUDES = $(MADP_INCLUDES) -I$(top_srcdir)/src/base\
 -I$(top_srcdir)/src/include

AM_LDFLAGS = 
LDADD = 
AM_CPPFLAGS = -Wall -pipe $(MARCH_FLAGS)
GENERAL_CPPFILES = \
 NamedDescribedEntity.cpp\
 IndexTools.cpp\
 Globals.cpp \
 VectorTools.cpp\
 TimeTools.cpp\
 StringTools.cpp

GENERAL_HFILES = $(GENERAL_CPPFILES:.cpp=.h)\
 PrintTools.h\
 EInvalidIndex.h\
 ENotCached.h\
 EParse.h\
 EOverflow.h\
 E.h\
 Referrer.h\
 DiscreteEntity.h 


#the MADP files should be the more basic data types.
MADP_CPPFILES = JointActionDiscrete.cpp JointObservationDiscrete.cpp\
 TransitionModelDiscrete.cpp ObservationModelDiscrete.cpp\
 TransitionModelMapping.cpp ObservationModelMapping.cpp\
 RewardModelMapping.cpp RewardModelMappingSparse.cpp\
 RewardModelTOISparse.cpp \
 MultiAgentDecisionProcess.cpp\
 MultiAgentDecisionProcessDiscrete.cpp\
 TransitionObservationIndependentMADPDiscrete.cpp TOIDecPOMDPDiscrete.cpp\
 TOIDecMDPDiscrete.cpp TOIFactoredRewardDecPOMDPDiscrete.cpp\
 TOICompactRewardDecPOMDPDiscrete.cpp\
 MADPComponentDiscreteActions.cpp MADPComponentDiscreteObservations.cpp\
 MADPComponentDiscreteStates.cpp DecPOMDP.cpp DecPOMDPDiscrete.cpp\
 POSG.cpp POSGDiscrete.cpp\
 TransitionModelMappingSparse.cpp\
 ObservationModelMappingSparse.cpp

MADP_HFILES = $(MADP_CPPFILES:.cpp=.h) Action.h Observation.h State.h Agent.h\
 ActionDiscrete.h ObservationDiscrete.h StateDiscrete.h\
 JointAction.h JointObservation.h\
 MultiAgentDecisionProcessInterface.h\
 MultiAgentDecisionProcessDiscreteInterface.h \
 DecPOMDPInterface.h\
 DecPOMDPDiscreteInterface.h\
 POSGInterface.h POSGDiscreteInterface.h\
 RewardModel.h ObservationModel.h TransitionModel.h\
 QTableInterface.h\
 StateDistribution.h StateDistributionVector.h\
 TGet.h RGet.h OGet.h

BASE_FILES = $(MADP_CPPFILES) $(MADP_HFILES)\
 $(GENERAL_CPPFILES) $(GENERAL_HFILES)


###############
# All DYNAMIC libraries
# the LTLIBRARIES (LibTool-libraries)

# the library to be build...
lib_LTLIBRARIES = libMADPBase.la
noinst_LTLIBRARIES = 

# sources for the library:
libMADPBase_la_SOURCES = $(BASE_FILES) 
libMADPBase_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
libMADPBase_la_LDFLAGS = $(AM_LDFLAGS) 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/base/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/base/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libMADPBase.la: $(libMADPBase_la_OBJECTS) $(libMADPBase_la_DEPENDENCIES) 
	$(libMADPBase_la_LINK) -rpath $(libdir) $(libMADPBase_la_OBJECTS) $(libMADPBase_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-DecPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-DecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-Globals.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-IndexTools.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-JointActionDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-JointObservationDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-MADPComponentDiscreteActions.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-MADPComponentDiscreteObservations.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-MADPComponentDiscreteStates.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-MultiAgentDecisionProcess.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-MultiAgentDecisionProcessDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-NamedDescribedEntity.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-ObservationModelDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-ObservationModelMapping.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-ObservationModelMappingSparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-POSG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-POSGDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-RewardModelMapping.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-RewardModelMappingSparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-RewardModelTOISparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-StringTools.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TOIDecMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TOIDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TimeTools.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TransitionModelDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TransitionModelMapping.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TransitionModelMappingSparse.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-TransitionObservationIndependentMADPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPBase_la-VectorTools.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libMADPBase_la-JointActionDiscrete.lo: JointActionDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-JointActionDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-JointActionDiscrete.Tpo -c -o libMADPBase_la-JointActionDiscrete.lo `test -f 'JointActionDiscrete.cpp' || echo '$(srcdir)/'`JointActionDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-JointActionDiscrete.Tpo $(DEPDIR)/libMADPBase_la-JointActionDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='JointActionDiscrete.cpp' object='libMADPBase_la-JointActionDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-JointActionDiscrete.lo `test -f 'JointActionDiscrete.cpp' || echo '$(srcdir)/'`JointActionDiscrete.cpp

libMADPBase_la-JointObservationDiscrete.lo: JointObservationDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-JointObservationDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-JointObservationDiscrete.Tpo -c -o libMADPBase_la-JointObservationDiscrete.lo `test -f 'JointObservationDiscrete.cpp' || echo '$(srcdir)/'`JointObservationDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-JointObservationDiscrete.Tpo $(DEPDIR)/libMADPBase_la-JointObservationDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='JointObservationDiscrete.cpp' object='libMADPBase_la-JointObservationDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-JointObservationDiscrete.lo `test -f 'JointObservationDiscrete.cpp' || echo '$(srcdir)/'`JointObservationDiscrete.cpp

libMADPBase_la-TransitionModelDiscrete.lo: TransitionModelDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TransitionModelDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TransitionModelDiscrete.Tpo -c -o libMADPBase_la-TransitionModelDiscrete.lo `test -f 'TransitionModelDiscrete.cpp' || echo '$(srcdir)/'`TransitionModelDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TransitionModelDiscrete.Tpo $(DEPDIR)/libMADPBase_la-TransitionModelDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TransitionModelDiscrete.cpp' object='libMADPBase_la-TransitionModelDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TransitionModelDiscrete.lo `test -f 'TransitionModelDiscrete.cpp' || echo '$(srcdir)/'`TransitionModelDiscrete.cpp

libMADPBase_la-ObservationModelDiscrete.lo: ObservationModelDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-ObservationModelDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-ObservationModelDiscrete.Tpo -c -o libMADPBase_la-ObservationModelDiscrete.lo `test -f 'ObservationModelDiscrete.cpp' || echo '$(srcdir)/'`ObservationModelDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-ObservationModelDiscrete.Tpo $(DEPDIR)/libMADPBase_la-ObservationModelDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ObservationModelDiscrete.cpp' object='libMADPBase_la-ObservationModelDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-ObservationModelDiscrete.lo `test -f 'ObservationModelDiscrete.cpp' || echo '$(srcdir)/'`ObservationModelDiscrete.cpp

libMADPBase_la-TransitionModelMapping.lo: TransitionModelMapping.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TransitionModelMapping.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TransitionModelMapping.Tpo -c -o libMADPBase_la-TransitionModelMapping.lo `test -f 'TransitionModelMapping.cpp' || echo '$(srcdir)/'`TransitionModelMapping.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TransitionModelMapping.Tpo $(DEPDIR)/libMADPBase_la-TransitionModelMapping.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TransitionModelMapping.cpp' object='libMADPBase_la-TransitionModelMapping.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TransitionModelMapping.lo `test -f 'TransitionModelMapping.cpp' || echo '$(srcdir)/'`TransitionModelMapping.cpp

libMADPBase_la-ObservationModelMapping.lo: ObservationModelMapping.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-ObservationModelMapping.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-ObservationModelMapping.Tpo -c -o libMADPBase_la-ObservationModelMapping.lo `test -f 'ObservationModelMapping.cpp' || echo '$(srcdir)/'`ObservationModelMapping.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-ObservationModelMapping.Tpo $(DEPDIR)/libMADPBase_la-ObservationModelMapping.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ObservationModelMapping.cpp' object='libMADPBase_la-ObservationModelMapping.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-ObservationModelMapping.lo `test -f 'ObservationModelMapping.cpp' || echo '$(srcdir)/'`ObservationModelMapping.cpp

libMADPBase_la-RewardModelMapping.lo: RewardModelMapping.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-RewardModelMapping.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-RewardModelMapping.Tpo -c -o libMADPBase_la-RewardModelMapping.lo `test -f 'RewardModelMapping.cpp' || echo '$(srcdir)/'`RewardModelMapping.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-RewardModelMapping.Tpo $(DEPDIR)/libMADPBase_la-RewardModelMapping.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RewardModelMapping.cpp' object='libMADPBase_la-RewardModelMapping.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-RewardModelMapping.lo `test -f 'RewardModelMapping.cpp' || echo '$(srcdir)/'`RewardModelMapping.cpp

libMADPBase_la-RewardModelMappingSparse.lo: RewardModelMappingSparse.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-RewardModelMappingSparse.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-RewardModelMappingSparse.Tpo -c -o libMADPBase_la-RewardModelMappingSparse.lo `test -f 'RewardModelMappingSparse.cpp' || echo '$(srcdir)/'`RewardModelMappingSparse.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-RewardModelMappingSparse.Tpo $(DEPDIR)/libMADPBase_la-RewardModelMappingSparse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RewardModelMappingSparse.cpp' object='libMADPBase_la-RewardModelMappingSparse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-RewardModelMappingSparse.lo `test -f 'RewardModelMappingSparse.cpp' || echo '$(srcdir)/'`RewardModelMappingSparse.cpp

libMADPBase_la-RewardModelTOISparse.lo: RewardModelTOISparse.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-RewardModelTOISparse.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-RewardModelTOISparse.Tpo -c -o libMADPBase_la-RewardModelTOISparse.lo `test -f 'RewardModelTOISparse.cpp' || echo '$(srcdir)/'`RewardModelTOISparse.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-RewardModelTOISparse.Tpo $(DEPDIR)/libMADPBase_la-RewardModelTOISparse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='RewardModelTOISparse.cpp' object='libMADPBase_la-RewardModelTOISparse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-RewardModelTOISparse.lo `test -f 'RewardModelTOISparse.cpp' || echo '$(srcdir)/'`RewardModelTOISparse.cpp

libMADPBase_la-MultiAgentDecisionProcess.lo: MultiAgentDecisionProcess.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-MultiAgentDecisionProcess.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-MultiAgentDecisionProcess.Tpo -c -o libMADPBase_la-MultiAgentDecisionProcess.lo `test -f 'MultiAgentDecisionProcess.cpp' || echo '$(srcdir)/'`MultiAgentDecisionProcess.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-MultiAgentDecisionProcess.Tpo $(DEPDIR)/libMADPBase_la-MultiAgentDecisionProcess.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MultiAgentDecisionProcess.cpp' object='libMADPBase_la-MultiAgentDecisionProcess.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-MultiAgentDecisionProcess.lo `test -f 'MultiAgentDecisionProcess.cpp' || echo '$(srcdir)/'`MultiAgentDecisionProcess.cpp

libMADPBase_la-MultiAgentDecisionProcessDiscrete.lo: MultiAgentDecisionProcessDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-MultiAgentDecisionProcessDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-MultiAgentDecisionProcessDiscrete.Tpo -c -o libMADPBase_la-MultiAgentDecisionProcessDiscrete.lo `test -f 'MultiAgentDecisionProcessDiscrete.cpp' || echo '$(srcdir)/'`MultiAgentDecisionProcessDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-MultiAgentDecisionProcessDiscrete.Tpo $(DEPDIR)/libMADPBase_la-MultiAgentDecisionProcessDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MultiAgentDecisionProcessDiscrete.cpp' object='libMADPBase_la-MultiAgentDecisionProcessDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-MultiAgentDecisionProcessDiscrete.lo `test -f 'MultiAgentDecisionProcessDiscrete.cpp' || echo '$(srcdir)/'`MultiAgentDecisionProcessDiscrete.cpp

libMADPBase_la-TransitionObservationIndependentMADPDiscrete.lo: TransitionObservationIndependentMADPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TransitionObservationIndependentMADPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TransitionObservationIndependentMADPDiscrete.Tpo -c -o libMADPBase_la-TransitionObservationIndependentMADPDiscrete.lo `test -f 'TransitionObservationIndependentMADPDiscrete.cpp' || echo '$(srcdir)/'`TransitionObservationIndependentMADPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TransitionObservationIndependentMADPDiscrete.Tpo $(DEPDIR)/libMADPBase_la-TransitionObservationIndependentMADPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TransitionObservationIndependentMADPDiscrete.cpp' object='libMADPBase_la-TransitionObservationIndependentMADPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TransitionObservationIndependentMADPDiscrete.lo `test -f 'TransitionObservationIndependentMADPDiscrete.cpp' || echo '$(srcdir)/'`TransitionObservationIndependentMADPDiscrete.cpp

libMADPBase_la-TOIDecPOMDPDiscrete.lo: TOIDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TOIDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TOIDecPOMDPDiscrete.Tpo -c -o libMADPBase_la-TOIDecPOMDPDiscrete.lo `test -f 'TOIDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`TOIDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TOIDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPBase_la-TOIDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TOIDecPOMDPDiscrete.cpp' object='libMADPBase_la-TOIDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TOIDecPOMDPDiscrete.lo `test -f 'TOIDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`TOIDecPOMDPDiscrete.cpp

libMADPBase_la-TOIDecMDPDiscrete.lo: TOIDecMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TOIDecMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TOIDecMDPDiscrete.Tpo -c -o libMADPBase_la-TOIDecMDPDiscrete.lo `test -f 'TOIDecMDPDiscrete.cpp' || echo '$(srcdir)/'`TOIDecMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TOIDecMDPDiscrete.Tpo $(DEPDIR)/libMADPBase_la-TOIDecMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TOIDecMDPDiscrete.cpp' object='libMADPBase_la-TOIDecMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TOIDecMDPDiscrete.lo `test -f 'TOIDecMDPDiscrete.cpp' || echo '$(srcdir)/'`TOIDecMDPDiscrete.cpp

libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.lo: TOIFactoredRewardDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.Tpo -c -o libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.lo `test -f 'TOIFactoredRewardDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`TOIFactoredRewardDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TOIFactoredRewardDecPOMDPDiscrete.cpp' object='libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TOIFactoredRewardDecPOMDPDiscrete.lo `test -f 'TOIFactoredRewardDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`TOIFactoredRewardDecPOMDPDiscrete.cpp

libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.lo: TOICompactRewardDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.Tpo -c -o libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.lo `test -f 'TOICompactRewardDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`TOICompactRewardDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TOICompactRewardDecPOMDPDiscrete.cpp' object='libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TOICompactRewardDecPOMDPDiscrete.lo `test -f 'TOICompactRewardDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`TOICompactRewardDecPOMDPDiscrete.cpp

libMADPBase_la-MADPComponentDiscreteActions.lo: MADPComponentDiscreteActions.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-MADPComponentDiscreteActions.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteActions.Tpo -c -o libMADPBase_la-MADPComponentDiscreteActions.lo `test -f 'MADPComponentDiscreteActions.cpp' || echo '$(srcdir)/'`MADPComponentDiscreteActions.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteActions.Tpo $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteActions.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MADPComponentDiscreteActions.cpp' object='libMADPBase_la-MADPComponentDiscreteActions.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-MADPComponentDiscreteActions.lo `test -f 'MADPComponentDiscreteActions.cpp' || echo '$(srcdir)/'`MADPComponentDiscreteActions.cpp

libMADPBase_la-MADPComponentDiscreteObservations.lo: MADPComponentDiscreteObservations.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-MADPComponentDiscreteObservations.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteObservations.Tpo -c -o libMADPBase_la-MADPComponentDiscreteObservations.lo `test -f 'MADPComponentDiscreteObservations.cpp' || echo '$(srcdir)/'`MADPComponentDiscreteObservations.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteObservations.Tpo $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteObservations.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MADPComponentDiscreteObservations.cpp' object='libMADPBase_la-MADPComponentDiscreteObservations.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-MADPComponentDiscreteObservations.lo `test -f 'MADPComponentDiscreteObservations.cpp' || echo '$(srcdir)/'`MADPComponentDiscreteObservations.cpp

libMADPBase_la-MADPComponentDiscreteStates.lo: MADPComponentDiscreteStates.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-MADPComponentDiscreteStates.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteStates.Tpo -c -o libMADPBase_la-MADPComponentDiscreteStates.lo `test -f 'MADPComponentDiscreteStates.cpp' || echo '$(srcdir)/'`MADPComponentDiscreteStates.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteStates.Tpo $(DEPDIR)/libMADPBase_la-MADPComponentDiscreteStates.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MADPComponentDiscreteStates.cpp' object='libMADPBase_la-MADPComponentDiscreteStates.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-MADPComponentDiscreteStates.lo `test -f 'MADPComponentDiscreteStates.cpp' || echo '$(srcdir)/'`MADPComponentDiscreteStates.cpp

libMADPBase_la-DecPOMDP.lo: DecPOMDP.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-DecPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-DecPOMDP.Tpo -c -o libMADPBase_la-DecPOMDP.lo `test -f 'DecPOMDP.cpp' || echo '$(srcdir)/'`DecPOMDP.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-DecPOMDP.Tpo $(DEPDIR)/libMADPBase_la-DecPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DecPOMDP.cpp' object='libMADPBase_la-DecPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-DecPOMDP.lo `test -f 'DecPOMDP.cpp' || echo '$(srcdir)/'`DecPOMDP.cpp

libMADPBase_la-DecPOMDPDiscrete.lo: DecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-DecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-DecPOMDPDiscrete.Tpo -c -o libMADPBase_la-DecPOMDPDiscrete.lo `test -f 'DecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`DecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-DecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPBase_la-DecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DecPOMDPDiscrete.cpp' object='libMADPBase_la-DecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-DecPOMDPDiscrete.lo `test -f 'DecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`DecPOMDPDiscrete.cpp

libMADPBase_la-POSG.lo: POSG.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-POSG.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-POSG.Tpo -c -o libMADPBase_la-POSG.lo `test -f 'POSG.cpp' || echo '$(srcdir)/'`POSG.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-POSG.Tpo $(DEPDIR)/libMADPBase_la-POSG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='POSG.cpp' object='libMADPBase_la-POSG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-POSG.lo `test -f 'POSG.cpp' || echo '$(srcdir)/'`POSG.cpp

libMADPBase_la-POSGDiscrete.lo: POSGDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-POSGDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-POSGDiscrete.Tpo -c -o libMADPBase_la-POSGDiscrete.lo `test -f 'POSGDiscrete.cpp' || echo '$(srcdir)/'`POSGDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-POSGDiscrete.Tpo $(DEPDIR)/libMADPBase_la-POSGDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='POSGDiscrete.cpp' object='libMADPBase_la-POSGDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-POSGDiscrete.lo `test -f 'POSGDiscrete.cpp' || echo '$(srcdir)/'`POSGDiscrete.cpp

libMADPBase_la-TransitionModelMappingSparse.lo: TransitionModelMappingSparse.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TransitionModelMappingSparse.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TransitionModelMappingSparse.Tpo -c -o libMADPBase_la-TransitionModelMappingSparse.lo `test -f 'TransitionModelMappingSparse.cpp' || echo '$(srcdir)/'`TransitionModelMappingSparse.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TransitionModelMappingSparse.Tpo $(DEPDIR)/libMADPBase_la-TransitionModelMappingSparse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TransitionModelMappingSparse.cpp' object='libMADPBase_la-TransitionModelMappingSparse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TransitionModelMappingSparse.lo `test -f 'TransitionModelMappingSparse.cpp' || echo '$(srcdir)/'`TransitionModelMappingSparse.cpp

libMADPBase_la-ObservationModelMappingSparse.lo: ObservationModelMappingSparse.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-ObservationModelMappingSparse.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-ObservationModelMappingSparse.Tpo -c -o libMADPBase_la-ObservationModelMappingSparse.lo `test -f 'ObservationModelMappingSparse.cpp' || echo '$(srcdir)/'`ObservationModelMappingSparse.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-ObservationModelMappingSparse.Tpo $(DEPDIR)/libMADPBase_la-ObservationModelMappingSparse.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ObservationModelMappingSparse.cpp' object='libMADPBase_la-ObservationModelMappingSparse.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-ObservationModelMappingSparse.lo `test -f 'ObservationModelMappingSparse.cpp' || echo '$(srcdir)/'`ObservationModelMappingSparse.cpp

libMADPBase_la-NamedDescribedEntity.lo: NamedDescribedEntity.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-NamedDescribedEntity.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-NamedDescribedEntity.Tpo -c -o libMADPBase_la-NamedDescribedEntity.lo `test -f 'NamedDescribedEntity.cpp' || echo '$(srcdir)/'`NamedDescribedEntity.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-NamedDescribedEntity.Tpo $(DEPDIR)/libMADPBase_la-NamedDescribedEntity.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='NamedDescribedEntity.cpp' object='libMADPBase_la-NamedDescribedEntity.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-NamedDescribedEntity.lo `test -f 'NamedDescribedEntity.cpp' || echo '$(srcdir)/'`NamedDescribedEntity.cpp

libMADPBase_la-IndexTools.lo: IndexTools.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-IndexTools.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-IndexTools.Tpo -c -o libMADPBase_la-IndexTools.lo `test -f 'IndexTools.cpp' || echo '$(srcdir)/'`IndexTools.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-IndexTools.Tpo $(DEPDIR)/libMADPBase_la-IndexTools.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='IndexTools.cpp' object='libMADPBase_la-IndexTools.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-IndexTools.lo `test -f 'IndexTools.cpp' || echo '$(srcdir)/'`IndexTools.cpp

libMADPBase_la-Globals.lo: Globals.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-Globals.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-Globals.Tpo -c -o libMADPBase_la-Globals.lo `test -f 'Globals.cpp' || echo '$(srcdir)/'`Globals.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-Globals.Tpo $(DEPDIR)/libMADPBase_la-Globals.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Globals.cpp' object='libMADPBase_la-Globals.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-Globals.lo `test -f 'Globals.cpp' || echo '$(srcdir)/'`Globals.cpp

libMADPBase_la-VectorTools.lo: VectorTools.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-VectorTools.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-VectorTools.Tpo -c -o libMADPBase_la-VectorTools.lo `test -f 'VectorTools.cpp' || echo '$(srcdir)/'`VectorTools.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-VectorTools.Tpo $(DEPDIR)/libMADPBase_la-VectorTools.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='VectorTools.cpp' object='libMADPBase_la-VectorTools.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-VectorTools.lo `test -f 'VectorTools.cpp' || echo '$(srcdir)/'`VectorTools.cpp

libMADPBase_la-TimeTools.lo: TimeTools.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-TimeTools.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-TimeTools.Tpo -c -o libMADPBase_la-TimeTools.lo `test -f 'TimeTools.cpp' || echo '$(srcdir)/'`TimeTools.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-TimeTools.Tpo $(DEPDIR)/libMADPBase_la-TimeTools.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='TimeTools.cpp' object='libMADPBase_la-TimeTools.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-TimeTools.lo `test -f 'TimeTools.cpp' || echo '$(srcdir)/'`TimeTools.cpp

libMADPBase_la-StringTools.lo: StringTools.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPBase_la-StringTools.lo -MD -MP -MF $(DEPDIR)/libMADPBase_la-StringTools.Tpo -c -o libMADPBase_la-StringTools.lo `test -f 'StringTools.cpp' || echo '$(srcdir)/'`StringTools.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPBase_la-StringTools.Tpo $(DEPDIR)/libMADPBase_la-StringTools.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='StringTools.cpp' object='libMADPBase_la-StringTools.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPBase_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPBase_la-StringTools.lo `test -f 'StringTools.cpp' || echo '$(srcdir)/'`StringTools.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
