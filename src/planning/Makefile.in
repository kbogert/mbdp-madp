# Makefile.in generated by automake 1.10.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $Id: Makefile.am 3652 2009-09-07 17:14:02Z mtjspaan $

# $Id: Makefile.custom 2964 2008-11-02 16:44:12Z mtjspaan $
# Contains several project-wide Makefile options

VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/config/Make-rules \
	$(top_srcdir)/src/Makefile.custom
subdir = src/planning
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)"
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
libMADPPlanning_la_DEPENDENCIES =
am__objects_1 = libMADPPlanning_la-BruteForceSearchPlanner.lo \
	libMADPPlanning_la-JESPExhaustivePlanner.lo \
	libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo \
	libMADPPlanning_la-DICEPSPlanner.lo libMADPPlanning_la-QBG.lo \
	libMADPPlanning_la-QPOMDP.lo libMADPPlanning_la-QMDP.lo \
	libMADPPlanning_la-MDPSolver.lo \
	libMADPPlanning_la-MDPValueIteration.lo \
	libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo \
	libMADPPlanning_la-BGIP_SolverRandom.lo \
	libMADPPlanning_la-QFunction.lo \
	libMADPPlanning_la-QFunctionForDecPOMDP.lo \
	libMADPPlanning_la-QFunctionJAOHInterface.lo \
	libMADPPlanning_la-QFunctionJAOH.lo \
	libMADPPlanning_la-QFunctionJAOHTree.lo \
	libMADPPlanning_la-QFunctionJointBelief.lo \
	libMADPPlanning_la-qheur.lo libMADPPlanning_la-gmaatype.lo \
	libMADPPlanning_la-JESPtype.lo \
	libMADPPlanning_la-BGIP_SolverType.lo \
	libMADPPlanning_la-BayesianGameBase.lo \
	libMADPPlanning_la-BayesianGame.lo \
	libMADPPlanning_la-BayesianGameIdenticalPayoff.lo \
	libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo \
	libMADPPlanning_la-BGforStageCreation.lo \
	libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo \
	libMADPPlanning_la-Type.lo libMADPPlanning_la-Type_AOHIndex.lo \
	libMADPPlanning_la-BGIPSolution.lo \
	libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo \
	libMADPPlanning_la-argumentHandlers.lo \
	libMADPPlanning_la-argumentUtils.lo \
	libMADPPlanning_la-directories.lo
am__objects_2 =
am__objects_3 = $(am__objects_2)
am__objects_4 = libMADPPlanning_la-SimulationResult.lo \
	libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo \
	libMADPPlanning_la-AgentPOMDP.lo libMADPPlanning_la-AgentBG.lo \
	libMADPPlanning_la-AgentQMDP.lo \
	libMADPPlanning_la-AgentRandom.lo
am__objects_5 = libMADPPlanning_la-BeliefValue.lo \
	libMADPPlanning_la-AlphaVector.lo \
	libMADPPlanning_la-AlphaVectorPlanning.lo \
	libMADPPlanning_la-Perseus.lo \
	libMADPPlanning_la-AlphaVectorPOMDP.lo \
	libMADPPlanning_la-PerseusPOMDPPlanner.lo \
	libMADPPlanning_la-AlphaVectorBG.lo \
	libMADPPlanning_la-PerseusBGPlanner.lo \
	libMADPPlanning_la-PerseusQFunctionPlanner.lo \
	libMADPPlanning_la-PerseusStationary.lo
am__objects_6 = libMADPPlanning_la-GeneralizedMAAStarPlanner.lo \
	libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo \
	libMADPPlanning_la-GMAA_MAAstar.lo \
	libMADPPlanning_la-GMAA_kGMAA.lo \
	libMADPPlanning_la-PolicyPoolJPolValPair.lo \
	libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo \
	libMADPPlanning_la-JPPVValuePair.lo \
	libMADPPlanning_la-JPPVIndexValuePair.lo \
	libMADPPlanning_la-PartialJPDPValuePair.lo \
	libMADPPlanning_la-PartialJPPVIndexValuePair.lo
am__objects_7 = $(am__objects_1) $(am__objects_3) $(am__objects_4) \
	$(am__objects_3) $(am__objects_5) $(am__objects_3) \
	$(am__objects_6) $(am__objects_3)
am_libMADPPlanning_la_OBJECTS = $(am__objects_7)
libMADPPlanning_la_OBJECTS = $(am_libMADPPlanning_la_OBJECTS)
libMADPPlanning_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libMADPPlanning_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libMADPPlanning_la_SOURCES)
DIST_SOURCES = $(libMADPPlanning_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NMEDIT = @NMEDIT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# the debug flags used - according to 
# http://sourceware.org/gdb/current/onlinedocs/gdb_13.html#SEC111
# dwarf-2 is best for c++ and gdb
DEBUG_FLAG = -gdwarf-2

# Optimization flags used for building normal and profiling libraries.
# -DNDEBUG speeds up the boost::numeric::ublas operations
CPP_OPTIMIZATION_FLAGS = -O3 -DNDEBUG
# Machine architecture specific flags
MARCH_FLAGS = 
MADP_INCLUDES = -I$(top_srcdir)/src/base -I$(top_srcdir)/src/include\
 -I$(top_srcdir)/src/support -I$(top_srcdir)/src/planning\
 -I$(top_srcdir)/src/parser\
 -isystem$(top_srcdir)/src/boost

MADP_LD = 

# Lists of libs to be linked with binaries.
# Note that the linking order matters, in order to correctly resolve symbols
MADPLIBS_NORMAL_NOPARSER_NOPLANNING = \
$(top_builddir)/src/base/libMADPBase.la

MADPLIBS_NORMAL_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanning.la\
 $(top_builddir)/src/support/libMADPSupport.la\
 $(MADPLIBS_NORMAL_NOPARSER_NOPLANNING)

MADPLIBS_NORMAL_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParser.la\
 $(MADPLIBS_NORMAL_NOPARSER_NOPLANNING)

MADPLIBS_NORMAL = \
 $(top_builddir)/src/parser/libMADPParser.la $(MADPLIBS_NORMAL_NOPARSER)

MADPLIBS_DEBUG_NOPARSER_NOPLANNING = \
 $(top_builddir)/src/base/libMADPBaseDebug.a

MADPLIBS_DEBUG_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanningDebug.a\
 $(top_builddir)/src/support/libMADPSupportDebug.a\
 $(MADPLIBS_DEBUG_NOPARSER_NOPLANNING)

MADPLIBS_DEBUG_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParserDebug.a\
 $(MADPLIBS_DEBUG_NOPARSER_NOPLANNING)

MADPLIBS_DEBUG = \
 $(top_builddir)/src/parser/libMADPParserDebug.a $(MADPLIBS_DEBUG_NOPARSER)

MADPLIBS_PROFILE_NOPARSER_NOPLANNING = \
 $(top_builddir)/src/base/libMADPBaseProfile.la

MADPLIBS_PROFILE_NOPARSER = \
 $(top_builddir)/src/planning/libMADPPlanningProfile.la\
 $(top_builddir)/src/support/libMADPSupportProfile.la\
 $(MADPLIBS_PROFILE_NOPARSER_NOPLANNING)

MADPLIBS_PROFILE_NOPLANNING = \
 $(top_builddir)/src/parser/libMADPParserProfile.la\
 $(MADPLIBS_PROFILE_NOPARSER_NOPLANNING)

MADPLIBS_PROFILE = \
 $(top_builddir)/src/parser/libMADPParserProfile.la $(MADPLIBS_PROFILE_NOPARSER)


##############
# Includedirs, libdirs, libs and cflags for all programs 
INCLUDES = $(MADP_INCLUDES) -I$(top_srcdir)/src/base\
 -I$(top_srcdir)/src/include -I$(top_srcdir)/src/support -I$(top_srcdir)/src/planning\
 -I$(top_srcdir)/src/parser 

AM_LDFLAGS = 
AM_CPPFLAGS = -Wall -pipe $(MARCH_FLAGS)
SIMULATION_CPPFILES = SimulationResult.cpp\
 SimulationDecPOMDPDiscrete.cpp \
 AgentPOMDP.cpp\
 AgentBG.cpp\
 AgentQMDP.cpp\
 AgentRandom.cpp

SIMULATION_HFILES = $(SIMULATION_CPPFILES:.cpp=.h) \
 Simulation.h\
 SimulationAgent.h \
 AgentDecPOMDPDiscrete.h\
 AgentDelayedSharedObservations.h\
 AgentFullyObservable.h\
 AgentSharedObservations.h\
 AgentLocalObservations.h

GMAA_CPPFILES = \
 GeneralizedMAAStarPlanner.cpp \
 GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp \
 GMAA_MAAstar.cpp\
 GMAA_kGMAA.cpp\
 PolicyPoolJPolValPair.cpp\
 PolicyPoolPartialJPolValPair.cpp\
 JPPVValuePair.cpp \
 JPPVIndexValuePair.cpp\
 PartialJPDPValuePair.cpp\
 PartialJPPVIndexValuePair.cpp

GMAA_HFILES = $(GMAA_CPPFILES:.cpp=.h)\
 PolicyPoolInterface.h\
 PartialPolicyPoolInterface.h\
 PartialPolicyPoolItemInterface.h\
 PolicyPoolItemInterface.h

POMDP_CPPFILES = \
 BeliefValue.cpp\
 AlphaVector.cpp \
 AlphaVectorPlanning.cpp\
 Perseus.cpp \
 AlphaVectorPOMDP.cpp\
 PerseusPOMDPPlanner.cpp\
 AlphaVectorBG.cpp\
 PerseusBGPlanner.cpp \
 PerseusQFunctionPlanner.cpp\
 PerseusStationary.cpp

POMDP_HFILES = $(POMDP_CPPFILES:.cpp=.h)\
 ValueFunctionPOMDPDiscrete.h\
 BGBackupType.h\
 PerseusBackupType.h\
 BeliefSet.h \
 QAV.h QAVParameters.h

PLANNING_CPPFILES = \
 BruteForceSearchPlanner.cpp\
 JESPExhaustivePlanner.cpp\
 JESPDynamicProgrammingPlanner.cpp\
 DICEPSPlanner.cpp\
 QBG.cpp QPOMDP.cpp QMDP.cpp\
 MDPSolver.cpp\
 MDPValueIteration.cpp \
 BayesianGameIdenticalPayoffSolver.cpp\
 BGIP_SolverRandom.cpp \
 QFunction.cpp\
 QFunctionForDecPOMDP.cpp\
 QFunctionJAOHInterface.cpp\
 QFunctionJAOH.cpp\
 QFunctionJAOHTree.cpp\
 QFunctionJointBelief.cpp \
 qheur.cpp\
 gmaatype.cpp\
 JESPtype.cpp\
 BGIP_SolverType.cpp\
 BayesianGameBase.cpp \
 BayesianGame.cpp \
 BayesianGameIdenticalPayoff.cpp\
 BayesianGameForDecPOMDPStage.cpp\
 BGforStageCreation.cpp\
 BayesianGameForDecPOMDPStageInterface.cpp\
 Type.cpp\
 Type_AOHIndex.cpp\
 BGIPSolution.cpp\
 ValueFunctionDecPOMDPDiscrete.cpp\
 argumentHandlers.cpp\
 argumentUtils.cpp\
 directories.cpp

PLANNING_HFILES = $(PLANNING_CPPFILES:.cpp=.h) \
 argumentHandlersPostChild.h\
 JointPolicyValuePair.h\
 PartialJointPolicyValuePair.h\
 ValueFunction.h\
 QFunctionInterface.h\
 QFunctionForDecPOMDPInterface.h\
 QFunctionJAOHInterface.h\
 QFunctionJointBeliefInterface.h\
 BGIP_SolverCreatorInterface.h\
 BGIP_SolverCreator_AM.h\
 BGIP_SolverCreator_BFS.h\
 BayesianGameIdenticalPayoffInterface.h\
 BGIP_SolverBruteForceSearch.h\
 BGIP_SolverAlternatingMaximization.h

PLANNING_FILES = $(PLANNING_CPPFILES) $(PLANNING_HFILES)\
 $(SIMULATION_CPPFILES) $(SIMULATION_HFILES)\
 $(POMDP_CPPFILES) $(POMDP_HFILES)\
 $(GMAA_CPPFILES) $(GMAA_HFILES)


###############
# All DYNAMIC libraries
# the LTLIBRARIES (LibTool-libraries)

# the library to be build...
lib_LTLIBRARIES = libMADPPlanning.la
noinst_LTLIBRARIES = 

# sources for the library:
libMADPPlanning_la_SOURCES = $(PLANNING_FILES)
libMADPPlanning_la_CPPFLAGS = $(AM_CPPFLAGS) $(CPP_OPTIMIZATION_FLAGS)
libMADPPlanning_la_LDFLAGS = $(AM_LDFLAGS)
libMADPPlanning_la_LIBADD = 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/src/Makefile.custom $(top_srcdir)/config/Make-rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/planning/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/planning/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libMADPPlanning.la: $(libMADPPlanning_la_OBJECTS) $(libMADPPlanning_la_DEPENDENCIES) 
	$(libMADPPlanning_la_LINK) -rpath $(libdir) $(libMADPPlanning_la_OBJECTS) $(libMADPPlanning_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentQMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AgentRandom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-AlphaVectorPlanning.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIPSolution.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverRandom.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGIP_SolverType.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BGforStageCreation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGame.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameBase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoff.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BeliefValue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-BruteForceSearchPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-DICEPSPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GMAA_MAAstar.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GMAA_kGMAA.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JESPDynamicProgrammingPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JESPExhaustivePlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JESPtype.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JPPVIndexValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-JPPVValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MDPSolver.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-MDPValueIteration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PartialJPDPValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PartialJPPVIndexValuePair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-Perseus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusBGPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusPOMDPPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusQFunctionPlanner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PerseusStationary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PolicyPoolJPolValPair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-PolicyPoolPartialJPolValPair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QBG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionForDecPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionJAOH.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionJAOHInterface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionJAOHTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QFunctionJointBelief.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-QPOMDP.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-SimulationDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-SimulationResult.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-Type.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-Type_AOHIndex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-argumentHandlers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-argumentUtils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-directories.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-gmaatype.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libMADPPlanning_la-qheur.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

libMADPPlanning_la-BruteForceSearchPlanner.lo: BruteForceSearchPlanner.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BruteForceSearchPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BruteForceSearchPlanner.Tpo -c -o libMADPPlanning_la-BruteForceSearchPlanner.lo `test -f 'BruteForceSearchPlanner.cpp' || echo '$(srcdir)/'`BruteForceSearchPlanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BruteForceSearchPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-BruteForceSearchPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BruteForceSearchPlanner.cpp' object='libMADPPlanning_la-BruteForceSearchPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BruteForceSearchPlanner.lo `test -f 'BruteForceSearchPlanner.cpp' || echo '$(srcdir)/'`BruteForceSearchPlanner.cpp

libMADPPlanning_la-JESPExhaustivePlanner.lo: JESPExhaustivePlanner.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JESPExhaustivePlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JESPExhaustivePlanner.Tpo -c -o libMADPPlanning_la-JESPExhaustivePlanner.lo `test -f 'JESPExhaustivePlanner.cpp' || echo '$(srcdir)/'`JESPExhaustivePlanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-JESPExhaustivePlanner.Tpo $(DEPDIR)/libMADPPlanning_la-JESPExhaustivePlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='JESPExhaustivePlanner.cpp' object='libMADPPlanning_la-JESPExhaustivePlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JESPExhaustivePlanner.lo `test -f 'JESPExhaustivePlanner.cpp' || echo '$(srcdir)/'`JESPExhaustivePlanner.cpp

libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo: JESPDynamicProgrammingPlanner.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JESPDynamicProgrammingPlanner.Tpo -c -o libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo `test -f 'JESPDynamicProgrammingPlanner.cpp' || echo '$(srcdir)/'`JESPDynamicProgrammingPlanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-JESPDynamicProgrammingPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-JESPDynamicProgrammingPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='JESPDynamicProgrammingPlanner.cpp' object='libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JESPDynamicProgrammingPlanner.lo `test -f 'JESPDynamicProgrammingPlanner.cpp' || echo '$(srcdir)/'`JESPDynamicProgrammingPlanner.cpp

libMADPPlanning_la-DICEPSPlanner.lo: DICEPSPlanner.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-DICEPSPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-DICEPSPlanner.Tpo -c -o libMADPPlanning_la-DICEPSPlanner.lo `test -f 'DICEPSPlanner.cpp' || echo '$(srcdir)/'`DICEPSPlanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-DICEPSPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-DICEPSPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DICEPSPlanner.cpp' object='libMADPPlanning_la-DICEPSPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-DICEPSPlanner.lo `test -f 'DICEPSPlanner.cpp' || echo '$(srcdir)/'`DICEPSPlanner.cpp

libMADPPlanning_la-QBG.lo: QBG.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QBG.Tpo -c -o libMADPPlanning_la-QBG.lo `test -f 'QBG.cpp' || echo '$(srcdir)/'`QBG.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QBG.Tpo $(DEPDIR)/libMADPPlanning_la-QBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QBG.cpp' object='libMADPPlanning_la-QBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QBG.lo `test -f 'QBG.cpp' || echo '$(srcdir)/'`QBG.cpp

libMADPPlanning_la-QPOMDP.lo: QPOMDP.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QPOMDP.Tpo -c -o libMADPPlanning_la-QPOMDP.lo `test -f 'QPOMDP.cpp' || echo '$(srcdir)/'`QPOMDP.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-QPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QPOMDP.cpp' object='libMADPPlanning_la-QPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QPOMDP.lo `test -f 'QPOMDP.cpp' || echo '$(srcdir)/'`QPOMDP.cpp

libMADPPlanning_la-QMDP.lo: QMDP.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QMDP.Tpo -c -o libMADPPlanning_la-QMDP.lo `test -f 'QMDP.cpp' || echo '$(srcdir)/'`QMDP.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QMDP.Tpo $(DEPDIR)/libMADPPlanning_la-QMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QMDP.cpp' object='libMADPPlanning_la-QMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QMDP.lo `test -f 'QMDP.cpp' || echo '$(srcdir)/'`QMDP.cpp

libMADPPlanning_la-MDPSolver.lo: MDPSolver.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MDPSolver.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MDPSolver.Tpo -c -o libMADPPlanning_la-MDPSolver.lo `test -f 'MDPSolver.cpp' || echo '$(srcdir)/'`MDPSolver.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-MDPSolver.Tpo $(DEPDIR)/libMADPPlanning_la-MDPSolver.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MDPSolver.cpp' object='libMADPPlanning_la-MDPSolver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MDPSolver.lo `test -f 'MDPSolver.cpp' || echo '$(srcdir)/'`MDPSolver.cpp

libMADPPlanning_la-MDPValueIteration.lo: MDPValueIteration.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-MDPValueIteration.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-MDPValueIteration.Tpo -c -o libMADPPlanning_la-MDPValueIteration.lo `test -f 'MDPValueIteration.cpp' || echo '$(srcdir)/'`MDPValueIteration.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-MDPValueIteration.Tpo $(DEPDIR)/libMADPPlanning_la-MDPValueIteration.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='MDPValueIteration.cpp' object='libMADPPlanning_la-MDPValueIteration.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-MDPValueIteration.lo `test -f 'MDPValueIteration.cpp' || echo '$(srcdir)/'`MDPValueIteration.cpp

libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo: BayesianGameIdenticalPayoffSolver.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.Tpo -c -o libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo `test -f 'BayesianGameIdenticalPayoffSolver.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoffSolver.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BayesianGameIdenticalPayoffSolver.cpp' object='libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameIdenticalPayoffSolver.lo `test -f 'BayesianGameIdenticalPayoffSolver.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoffSolver.cpp

libMADPPlanning_la-BGIP_SolverRandom.lo: BGIP_SolverRandom.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverRandom.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverRandom.Tpo -c -o libMADPPlanning_la-BGIP_SolverRandom.lo `test -f 'BGIP_SolverRandom.cpp' || echo '$(srcdir)/'`BGIP_SolverRandom.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BGIP_SolverRandom.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverRandom.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BGIP_SolverRandom.cpp' object='libMADPPlanning_la-BGIP_SolverRandom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverRandom.lo `test -f 'BGIP_SolverRandom.cpp' || echo '$(srcdir)/'`BGIP_SolverRandom.cpp

libMADPPlanning_la-QFunction.lo: QFunction.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunction.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunction.Tpo -c -o libMADPPlanning_la-QFunction.lo `test -f 'QFunction.cpp' || echo '$(srcdir)/'`QFunction.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QFunction.Tpo $(DEPDIR)/libMADPPlanning_la-QFunction.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QFunction.cpp' object='libMADPPlanning_la-QFunction.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunction.lo `test -f 'QFunction.cpp' || echo '$(srcdir)/'`QFunction.cpp

libMADPPlanning_la-QFunctionForDecPOMDP.lo: QFunctionForDecPOMDP.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionForDecPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionForDecPOMDP.Tpo -c -o libMADPPlanning_la-QFunctionForDecPOMDP.lo `test -f 'QFunctionForDecPOMDP.cpp' || echo '$(srcdir)/'`QFunctionForDecPOMDP.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QFunctionForDecPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionForDecPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QFunctionForDecPOMDP.cpp' object='libMADPPlanning_la-QFunctionForDecPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionForDecPOMDP.lo `test -f 'QFunctionForDecPOMDP.cpp' || echo '$(srcdir)/'`QFunctionForDecPOMDP.cpp

libMADPPlanning_la-QFunctionJAOHInterface.lo: QFunctionJAOHInterface.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionJAOHInterface.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHInterface.Tpo -c -o libMADPPlanning_la-QFunctionJAOHInterface.lo `test -f 'QFunctionJAOHInterface.cpp' || echo '$(srcdir)/'`QFunctionJAOHInterface.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHInterface.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHInterface.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QFunctionJAOHInterface.cpp' object='libMADPPlanning_la-QFunctionJAOHInterface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionJAOHInterface.lo `test -f 'QFunctionJAOHInterface.cpp' || echo '$(srcdir)/'`QFunctionJAOHInterface.cpp

libMADPPlanning_la-QFunctionJAOH.lo: QFunctionJAOH.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionJAOH.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionJAOH.Tpo -c -o libMADPPlanning_la-QFunctionJAOH.lo `test -f 'QFunctionJAOH.cpp' || echo '$(srcdir)/'`QFunctionJAOH.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QFunctionJAOH.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionJAOH.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QFunctionJAOH.cpp' object='libMADPPlanning_la-QFunctionJAOH.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionJAOH.lo `test -f 'QFunctionJAOH.cpp' || echo '$(srcdir)/'`QFunctionJAOH.cpp

libMADPPlanning_la-QFunctionJAOHTree.lo: QFunctionJAOHTree.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionJAOHTree.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHTree.Tpo -c -o libMADPPlanning_la-QFunctionJAOHTree.lo `test -f 'QFunctionJAOHTree.cpp' || echo '$(srcdir)/'`QFunctionJAOHTree.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHTree.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionJAOHTree.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QFunctionJAOHTree.cpp' object='libMADPPlanning_la-QFunctionJAOHTree.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionJAOHTree.lo `test -f 'QFunctionJAOHTree.cpp' || echo '$(srcdir)/'`QFunctionJAOHTree.cpp

libMADPPlanning_la-QFunctionJointBelief.lo: QFunctionJointBelief.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-QFunctionJointBelief.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-QFunctionJointBelief.Tpo -c -o libMADPPlanning_la-QFunctionJointBelief.lo `test -f 'QFunctionJointBelief.cpp' || echo '$(srcdir)/'`QFunctionJointBelief.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-QFunctionJointBelief.Tpo $(DEPDIR)/libMADPPlanning_la-QFunctionJointBelief.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='QFunctionJointBelief.cpp' object='libMADPPlanning_la-QFunctionJointBelief.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-QFunctionJointBelief.lo `test -f 'QFunctionJointBelief.cpp' || echo '$(srcdir)/'`QFunctionJointBelief.cpp

libMADPPlanning_la-qheur.lo: qheur.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-qheur.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-qheur.Tpo -c -o libMADPPlanning_la-qheur.lo `test -f 'qheur.cpp' || echo '$(srcdir)/'`qheur.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-qheur.Tpo $(DEPDIR)/libMADPPlanning_la-qheur.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='qheur.cpp' object='libMADPPlanning_la-qheur.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-qheur.lo `test -f 'qheur.cpp' || echo '$(srcdir)/'`qheur.cpp

libMADPPlanning_la-gmaatype.lo: gmaatype.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-gmaatype.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-gmaatype.Tpo -c -o libMADPPlanning_la-gmaatype.lo `test -f 'gmaatype.cpp' || echo '$(srcdir)/'`gmaatype.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-gmaatype.Tpo $(DEPDIR)/libMADPPlanning_la-gmaatype.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='gmaatype.cpp' object='libMADPPlanning_la-gmaatype.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-gmaatype.lo `test -f 'gmaatype.cpp' || echo '$(srcdir)/'`gmaatype.cpp

libMADPPlanning_la-JESPtype.lo: JESPtype.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JESPtype.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JESPtype.Tpo -c -o libMADPPlanning_la-JESPtype.lo `test -f 'JESPtype.cpp' || echo '$(srcdir)/'`JESPtype.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-JESPtype.Tpo $(DEPDIR)/libMADPPlanning_la-JESPtype.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='JESPtype.cpp' object='libMADPPlanning_la-JESPtype.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JESPtype.lo `test -f 'JESPtype.cpp' || echo '$(srcdir)/'`JESPtype.cpp

libMADPPlanning_la-BGIP_SolverType.lo: BGIP_SolverType.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIP_SolverType.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIP_SolverType.Tpo -c -o libMADPPlanning_la-BGIP_SolverType.lo `test -f 'BGIP_SolverType.cpp' || echo '$(srcdir)/'`BGIP_SolverType.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BGIP_SolverType.Tpo $(DEPDIR)/libMADPPlanning_la-BGIP_SolverType.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BGIP_SolverType.cpp' object='libMADPPlanning_la-BGIP_SolverType.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIP_SolverType.lo `test -f 'BGIP_SolverType.cpp' || echo '$(srcdir)/'`BGIP_SolverType.cpp

libMADPPlanning_la-BayesianGameBase.lo: BayesianGameBase.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameBase.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameBase.Tpo -c -o libMADPPlanning_la-BayesianGameBase.lo `test -f 'BayesianGameBase.cpp' || echo '$(srcdir)/'`BayesianGameBase.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BayesianGameBase.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameBase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BayesianGameBase.cpp' object='libMADPPlanning_la-BayesianGameBase.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameBase.lo `test -f 'BayesianGameBase.cpp' || echo '$(srcdir)/'`BayesianGameBase.cpp

libMADPPlanning_la-BayesianGame.lo: BayesianGame.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGame.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGame.Tpo -c -o libMADPPlanning_la-BayesianGame.lo `test -f 'BayesianGame.cpp' || echo '$(srcdir)/'`BayesianGame.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BayesianGame.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGame.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BayesianGame.cpp' object='libMADPPlanning_la-BayesianGame.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGame.lo `test -f 'BayesianGame.cpp' || echo '$(srcdir)/'`BayesianGame.cpp

libMADPPlanning_la-BayesianGameIdenticalPayoff.lo: BayesianGameIdenticalPayoff.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameIdenticalPayoff.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoff.Tpo -c -o libMADPPlanning_la-BayesianGameIdenticalPayoff.lo `test -f 'BayesianGameIdenticalPayoff.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoff.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoff.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameIdenticalPayoff.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BayesianGameIdenticalPayoff.cpp' object='libMADPPlanning_la-BayesianGameIdenticalPayoff.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameIdenticalPayoff.lo `test -f 'BayesianGameIdenticalPayoff.cpp' || echo '$(srcdir)/'`BayesianGameIdenticalPayoff.cpp

libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo: BayesianGameForDecPOMDPStage.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStage.Tpo -c -o libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo `test -f 'BayesianGameForDecPOMDPStage.cpp' || echo '$(srcdir)/'`BayesianGameForDecPOMDPStage.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStage.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStage.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BayesianGameForDecPOMDPStage.cpp' object='libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameForDecPOMDPStage.lo `test -f 'BayesianGameForDecPOMDPStage.cpp' || echo '$(srcdir)/'`BayesianGameForDecPOMDPStage.cpp

libMADPPlanning_la-BGforStageCreation.lo: BGforStageCreation.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGforStageCreation.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGforStageCreation.Tpo -c -o libMADPPlanning_la-BGforStageCreation.lo `test -f 'BGforStageCreation.cpp' || echo '$(srcdir)/'`BGforStageCreation.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BGforStageCreation.Tpo $(DEPDIR)/libMADPPlanning_la-BGforStageCreation.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BGforStageCreation.cpp' object='libMADPPlanning_la-BGforStageCreation.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGforStageCreation.lo `test -f 'BGforStageCreation.cpp' || echo '$(srcdir)/'`BGforStageCreation.cpp

libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo: BayesianGameForDecPOMDPStageInterface.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.Tpo -c -o libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo `test -f 'BayesianGameForDecPOMDPStageInterface.cpp' || echo '$(srcdir)/'`BayesianGameForDecPOMDPStageInterface.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.Tpo $(DEPDIR)/libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BayesianGameForDecPOMDPStageInterface.cpp' object='libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BayesianGameForDecPOMDPStageInterface.lo `test -f 'BayesianGameForDecPOMDPStageInterface.cpp' || echo '$(srcdir)/'`BayesianGameForDecPOMDPStageInterface.cpp

libMADPPlanning_la-Type.lo: Type.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-Type.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-Type.Tpo -c -o libMADPPlanning_la-Type.lo `test -f 'Type.cpp' || echo '$(srcdir)/'`Type.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-Type.Tpo $(DEPDIR)/libMADPPlanning_la-Type.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Type.cpp' object='libMADPPlanning_la-Type.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-Type.lo `test -f 'Type.cpp' || echo '$(srcdir)/'`Type.cpp

libMADPPlanning_la-Type_AOHIndex.lo: Type_AOHIndex.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-Type_AOHIndex.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-Type_AOHIndex.Tpo -c -o libMADPPlanning_la-Type_AOHIndex.lo `test -f 'Type_AOHIndex.cpp' || echo '$(srcdir)/'`Type_AOHIndex.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-Type_AOHIndex.Tpo $(DEPDIR)/libMADPPlanning_la-Type_AOHIndex.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Type_AOHIndex.cpp' object='libMADPPlanning_la-Type_AOHIndex.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-Type_AOHIndex.lo `test -f 'Type_AOHIndex.cpp' || echo '$(srcdir)/'`Type_AOHIndex.cpp

libMADPPlanning_la-BGIPSolution.lo: BGIPSolution.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BGIPSolution.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BGIPSolution.Tpo -c -o libMADPPlanning_la-BGIPSolution.lo `test -f 'BGIPSolution.cpp' || echo '$(srcdir)/'`BGIPSolution.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BGIPSolution.Tpo $(DEPDIR)/libMADPPlanning_la-BGIPSolution.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BGIPSolution.cpp' object='libMADPPlanning_la-BGIPSolution.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BGIPSolution.lo `test -f 'BGIPSolution.cpp' || echo '$(srcdir)/'`BGIPSolution.cpp

libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo: ValueFunctionDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo `test -f 'ValueFunctionDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ValueFunctionDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ValueFunctionDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-ValueFunctionDecPOMDPDiscrete.lo `test -f 'ValueFunctionDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`ValueFunctionDecPOMDPDiscrete.cpp

libMADPPlanning_la-argumentHandlers.lo: argumentHandlers.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-argumentHandlers.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-argumentHandlers.Tpo -c -o libMADPPlanning_la-argumentHandlers.lo `test -f 'argumentHandlers.cpp' || echo '$(srcdir)/'`argumentHandlers.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-argumentHandlers.Tpo $(DEPDIR)/libMADPPlanning_la-argumentHandlers.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='argumentHandlers.cpp' object='libMADPPlanning_la-argumentHandlers.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-argumentHandlers.lo `test -f 'argumentHandlers.cpp' || echo '$(srcdir)/'`argumentHandlers.cpp

libMADPPlanning_la-argumentUtils.lo: argumentUtils.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-argumentUtils.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-argumentUtils.Tpo -c -o libMADPPlanning_la-argumentUtils.lo `test -f 'argumentUtils.cpp' || echo '$(srcdir)/'`argumentUtils.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-argumentUtils.Tpo $(DEPDIR)/libMADPPlanning_la-argumentUtils.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='argumentUtils.cpp' object='libMADPPlanning_la-argumentUtils.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-argumentUtils.lo `test -f 'argumentUtils.cpp' || echo '$(srcdir)/'`argumentUtils.cpp

libMADPPlanning_la-directories.lo: directories.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-directories.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-directories.Tpo -c -o libMADPPlanning_la-directories.lo `test -f 'directories.cpp' || echo '$(srcdir)/'`directories.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-directories.Tpo $(DEPDIR)/libMADPPlanning_la-directories.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='directories.cpp' object='libMADPPlanning_la-directories.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-directories.lo `test -f 'directories.cpp' || echo '$(srcdir)/'`directories.cpp

libMADPPlanning_la-SimulationResult.lo: SimulationResult.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-SimulationResult.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-SimulationResult.Tpo -c -o libMADPPlanning_la-SimulationResult.lo `test -f 'SimulationResult.cpp' || echo '$(srcdir)/'`SimulationResult.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-SimulationResult.Tpo $(DEPDIR)/libMADPPlanning_la-SimulationResult.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SimulationResult.cpp' object='libMADPPlanning_la-SimulationResult.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-SimulationResult.lo `test -f 'SimulationResult.cpp' || echo '$(srcdir)/'`SimulationResult.cpp

libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo: SimulationDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-SimulationDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo `test -f 'SimulationDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`SimulationDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-SimulationDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-SimulationDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='SimulationDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-SimulationDecPOMDPDiscrete.lo `test -f 'SimulationDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`SimulationDecPOMDPDiscrete.cpp

libMADPPlanning_la-AgentPOMDP.lo: AgentPOMDP.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentPOMDP.Tpo -c -o libMADPPlanning_la-AgentPOMDP.lo `test -f 'AgentPOMDP.cpp' || echo '$(srcdir)/'`AgentPOMDP.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-AgentPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AgentPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AgentPOMDP.cpp' object='libMADPPlanning_la-AgentPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentPOMDP.lo `test -f 'AgentPOMDP.cpp' || echo '$(srcdir)/'`AgentPOMDP.cpp

libMADPPlanning_la-AgentBG.lo: AgentBG.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentBG.Tpo -c -o libMADPPlanning_la-AgentBG.lo `test -f 'AgentBG.cpp' || echo '$(srcdir)/'`AgentBG.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-AgentBG.Tpo $(DEPDIR)/libMADPPlanning_la-AgentBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AgentBG.cpp' object='libMADPPlanning_la-AgentBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentBG.lo `test -f 'AgentBG.cpp' || echo '$(srcdir)/'`AgentBG.cpp

libMADPPlanning_la-AgentQMDP.lo: AgentQMDP.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentQMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentQMDP.Tpo -c -o libMADPPlanning_la-AgentQMDP.lo `test -f 'AgentQMDP.cpp' || echo '$(srcdir)/'`AgentQMDP.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-AgentQMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AgentQMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AgentQMDP.cpp' object='libMADPPlanning_la-AgentQMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentQMDP.lo `test -f 'AgentQMDP.cpp' || echo '$(srcdir)/'`AgentQMDP.cpp

libMADPPlanning_la-AgentRandom.lo: AgentRandom.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AgentRandom.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AgentRandom.Tpo -c -o libMADPPlanning_la-AgentRandom.lo `test -f 'AgentRandom.cpp' || echo '$(srcdir)/'`AgentRandom.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-AgentRandom.Tpo $(DEPDIR)/libMADPPlanning_la-AgentRandom.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AgentRandom.cpp' object='libMADPPlanning_la-AgentRandom.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AgentRandom.lo `test -f 'AgentRandom.cpp' || echo '$(srcdir)/'`AgentRandom.cpp

libMADPPlanning_la-BeliefValue.lo: BeliefValue.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-BeliefValue.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-BeliefValue.Tpo -c -o libMADPPlanning_la-BeliefValue.lo `test -f 'BeliefValue.cpp' || echo '$(srcdir)/'`BeliefValue.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-BeliefValue.Tpo $(DEPDIR)/libMADPPlanning_la-BeliefValue.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='BeliefValue.cpp' object='libMADPPlanning_la-BeliefValue.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-BeliefValue.lo `test -f 'BeliefValue.cpp' || echo '$(srcdir)/'`BeliefValue.cpp

libMADPPlanning_la-AlphaVector.lo: AlphaVector.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVector.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVector.Tpo -c -o libMADPPlanning_la-AlphaVector.lo `test -f 'AlphaVector.cpp' || echo '$(srcdir)/'`AlphaVector.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-AlphaVector.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVector.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AlphaVector.cpp' object='libMADPPlanning_la-AlphaVector.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVector.lo `test -f 'AlphaVector.cpp' || echo '$(srcdir)/'`AlphaVector.cpp

libMADPPlanning_la-AlphaVectorPlanning.lo: AlphaVectorPlanning.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorPlanning.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorPlanning.Tpo -c -o libMADPPlanning_la-AlphaVectorPlanning.lo `test -f 'AlphaVectorPlanning.cpp' || echo '$(srcdir)/'`AlphaVectorPlanning.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-AlphaVectorPlanning.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorPlanning.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AlphaVectorPlanning.cpp' object='libMADPPlanning_la-AlphaVectorPlanning.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorPlanning.lo `test -f 'AlphaVectorPlanning.cpp' || echo '$(srcdir)/'`AlphaVectorPlanning.cpp

libMADPPlanning_la-Perseus.lo: Perseus.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-Perseus.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-Perseus.Tpo -c -o libMADPPlanning_la-Perseus.lo `test -f 'Perseus.cpp' || echo '$(srcdir)/'`Perseus.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-Perseus.Tpo $(DEPDIR)/libMADPPlanning_la-Perseus.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='Perseus.cpp' object='libMADPPlanning_la-Perseus.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-Perseus.lo `test -f 'Perseus.cpp' || echo '$(srcdir)/'`Perseus.cpp

libMADPPlanning_la-AlphaVectorPOMDP.lo: AlphaVectorPOMDP.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorPOMDP.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorPOMDP.Tpo -c -o libMADPPlanning_la-AlphaVectorPOMDP.lo `test -f 'AlphaVectorPOMDP.cpp' || echo '$(srcdir)/'`AlphaVectorPOMDP.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-AlphaVectorPOMDP.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorPOMDP.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AlphaVectorPOMDP.cpp' object='libMADPPlanning_la-AlphaVectorPOMDP.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorPOMDP.lo `test -f 'AlphaVectorPOMDP.cpp' || echo '$(srcdir)/'`AlphaVectorPOMDP.cpp

libMADPPlanning_la-PerseusPOMDPPlanner.lo: PerseusPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusPOMDPPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusPOMDPPlanner.Tpo -c -o libMADPPlanning_la-PerseusPOMDPPlanner.lo `test -f 'PerseusPOMDPPlanner.cpp' || echo '$(srcdir)/'`PerseusPOMDPPlanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-PerseusPOMDPPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusPOMDPPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PerseusPOMDPPlanner.cpp' object='libMADPPlanning_la-PerseusPOMDPPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusPOMDPPlanner.lo `test -f 'PerseusPOMDPPlanner.cpp' || echo '$(srcdir)/'`PerseusPOMDPPlanner.cpp

libMADPPlanning_la-AlphaVectorBG.lo: AlphaVectorBG.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-AlphaVectorBG.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-AlphaVectorBG.Tpo -c -o libMADPPlanning_la-AlphaVectorBG.lo `test -f 'AlphaVectorBG.cpp' || echo '$(srcdir)/'`AlphaVectorBG.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-AlphaVectorBG.Tpo $(DEPDIR)/libMADPPlanning_la-AlphaVectorBG.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='AlphaVectorBG.cpp' object='libMADPPlanning_la-AlphaVectorBG.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-AlphaVectorBG.lo `test -f 'AlphaVectorBG.cpp' || echo '$(srcdir)/'`AlphaVectorBG.cpp

libMADPPlanning_la-PerseusBGPlanner.lo: PerseusBGPlanner.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusBGPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusBGPlanner.Tpo -c -o libMADPPlanning_la-PerseusBGPlanner.lo `test -f 'PerseusBGPlanner.cpp' || echo '$(srcdir)/'`PerseusBGPlanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-PerseusBGPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusBGPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PerseusBGPlanner.cpp' object='libMADPPlanning_la-PerseusBGPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusBGPlanner.lo `test -f 'PerseusBGPlanner.cpp' || echo '$(srcdir)/'`PerseusBGPlanner.cpp

libMADPPlanning_la-PerseusQFunctionPlanner.lo: PerseusQFunctionPlanner.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusQFunctionPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusQFunctionPlanner.Tpo -c -o libMADPPlanning_la-PerseusQFunctionPlanner.lo `test -f 'PerseusQFunctionPlanner.cpp' || echo '$(srcdir)/'`PerseusQFunctionPlanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-PerseusQFunctionPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusQFunctionPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PerseusQFunctionPlanner.cpp' object='libMADPPlanning_la-PerseusQFunctionPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusQFunctionPlanner.lo `test -f 'PerseusQFunctionPlanner.cpp' || echo '$(srcdir)/'`PerseusQFunctionPlanner.cpp

libMADPPlanning_la-PerseusStationary.lo: PerseusStationary.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PerseusStationary.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PerseusStationary.Tpo -c -o libMADPPlanning_la-PerseusStationary.lo `test -f 'PerseusStationary.cpp' || echo '$(srcdir)/'`PerseusStationary.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-PerseusStationary.Tpo $(DEPDIR)/libMADPPlanning_la-PerseusStationary.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PerseusStationary.cpp' object='libMADPPlanning_la-PerseusStationary.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PerseusStationary.lo `test -f 'PerseusStationary.cpp' || echo '$(srcdir)/'`PerseusStationary.cpp

libMADPPlanning_la-GeneralizedMAAStarPlanner.lo: GeneralizedMAAStarPlanner.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GeneralizedMAAStarPlanner.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlanner.Tpo -c -o libMADPPlanning_la-GeneralizedMAAStarPlanner.lo `test -f 'GeneralizedMAAStarPlanner.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlanner.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlanner.Tpo $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlanner.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GeneralizedMAAStarPlanner.cpp' object='libMADPPlanning_la-GeneralizedMAAStarPlanner.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GeneralizedMAAStarPlanner.lo `test -f 'GeneralizedMAAStarPlanner.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlanner.cpp

libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo: GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.Tpo -c -o libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo `test -f 'GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.Tpo $(DEPDIR)/libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp' object='libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GeneralizedMAAStarPlannerForDecPOMDPDiscrete.lo `test -f 'GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp' || echo '$(srcdir)/'`GeneralizedMAAStarPlannerForDecPOMDPDiscrete.cpp

libMADPPlanning_la-GMAA_MAAstar.lo: GMAA_MAAstar.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GMAA_MAAstar.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstar.Tpo -c -o libMADPPlanning_la-GMAA_MAAstar.lo `test -f 'GMAA_MAAstar.cpp' || echo '$(srcdir)/'`GMAA_MAAstar.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstar.Tpo $(DEPDIR)/libMADPPlanning_la-GMAA_MAAstar.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GMAA_MAAstar.cpp' object='libMADPPlanning_la-GMAA_MAAstar.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GMAA_MAAstar.lo `test -f 'GMAA_MAAstar.cpp' || echo '$(srcdir)/'`GMAA_MAAstar.cpp

libMADPPlanning_la-GMAA_kGMAA.lo: GMAA_kGMAA.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-GMAA_kGMAA.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAA.Tpo -c -o libMADPPlanning_la-GMAA_kGMAA.lo `test -f 'GMAA_kGMAA.cpp' || echo '$(srcdir)/'`GMAA_kGMAA.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAA.Tpo $(DEPDIR)/libMADPPlanning_la-GMAA_kGMAA.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='GMAA_kGMAA.cpp' object='libMADPPlanning_la-GMAA_kGMAA.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-GMAA_kGMAA.lo `test -f 'GMAA_kGMAA.cpp' || echo '$(srcdir)/'`GMAA_kGMAA.cpp

libMADPPlanning_la-PolicyPoolJPolValPair.lo: PolicyPoolJPolValPair.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PolicyPoolJPolValPair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PolicyPoolJPolValPair.Tpo -c -o libMADPPlanning_la-PolicyPoolJPolValPair.lo `test -f 'PolicyPoolJPolValPair.cpp' || echo '$(srcdir)/'`PolicyPoolJPolValPair.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-PolicyPoolJPolValPair.Tpo $(DEPDIR)/libMADPPlanning_la-PolicyPoolJPolValPair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PolicyPoolJPolValPair.cpp' object='libMADPPlanning_la-PolicyPoolJPolValPair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PolicyPoolJPolValPair.lo `test -f 'PolicyPoolJPolValPair.cpp' || echo '$(srcdir)/'`PolicyPoolJPolValPair.cpp

libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo: PolicyPoolPartialJPolValPair.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PolicyPoolPartialJPolValPair.Tpo -c -o libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo `test -f 'PolicyPoolPartialJPolValPair.cpp' || echo '$(srcdir)/'`PolicyPoolPartialJPolValPair.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-PolicyPoolPartialJPolValPair.Tpo $(DEPDIR)/libMADPPlanning_la-PolicyPoolPartialJPolValPair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PolicyPoolPartialJPolValPair.cpp' object='libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PolicyPoolPartialJPolValPair.lo `test -f 'PolicyPoolPartialJPolValPair.cpp' || echo '$(srcdir)/'`PolicyPoolPartialJPolValPair.cpp

libMADPPlanning_la-JPPVValuePair.lo: JPPVValuePair.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JPPVValuePair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JPPVValuePair.Tpo -c -o libMADPPlanning_la-JPPVValuePair.lo `test -f 'JPPVValuePair.cpp' || echo '$(srcdir)/'`JPPVValuePair.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-JPPVValuePair.Tpo $(DEPDIR)/libMADPPlanning_la-JPPVValuePair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='JPPVValuePair.cpp' object='libMADPPlanning_la-JPPVValuePair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JPPVValuePair.lo `test -f 'JPPVValuePair.cpp' || echo '$(srcdir)/'`JPPVValuePair.cpp

libMADPPlanning_la-JPPVIndexValuePair.lo: JPPVIndexValuePair.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-JPPVIndexValuePair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-JPPVIndexValuePair.Tpo -c -o libMADPPlanning_la-JPPVIndexValuePair.lo `test -f 'JPPVIndexValuePair.cpp' || echo '$(srcdir)/'`JPPVIndexValuePair.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-JPPVIndexValuePair.Tpo $(DEPDIR)/libMADPPlanning_la-JPPVIndexValuePair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='JPPVIndexValuePair.cpp' object='libMADPPlanning_la-JPPVIndexValuePair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-JPPVIndexValuePair.lo `test -f 'JPPVIndexValuePair.cpp' || echo '$(srcdir)/'`JPPVIndexValuePair.cpp

libMADPPlanning_la-PartialJPDPValuePair.lo: PartialJPDPValuePair.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PartialJPDPValuePair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PartialJPDPValuePair.Tpo -c -o libMADPPlanning_la-PartialJPDPValuePair.lo `test -f 'PartialJPDPValuePair.cpp' || echo '$(srcdir)/'`PartialJPDPValuePair.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-PartialJPDPValuePair.Tpo $(DEPDIR)/libMADPPlanning_la-PartialJPDPValuePair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PartialJPDPValuePair.cpp' object='libMADPPlanning_la-PartialJPDPValuePair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PartialJPDPValuePair.lo `test -f 'PartialJPDPValuePair.cpp' || echo '$(srcdir)/'`PartialJPDPValuePair.cpp

libMADPPlanning_la-PartialJPPVIndexValuePair.lo: PartialJPPVIndexValuePair.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libMADPPlanning_la-PartialJPPVIndexValuePair.lo -MD -MP -MF $(DEPDIR)/libMADPPlanning_la-PartialJPPVIndexValuePair.Tpo -c -o libMADPPlanning_la-PartialJPPVIndexValuePair.lo `test -f 'PartialJPPVIndexValuePair.cpp' || echo '$(srcdir)/'`PartialJPPVIndexValuePair.cpp
@am__fastdepCXX_TRUE@	mv -f $(DEPDIR)/libMADPPlanning_la-PartialJPPVIndexValuePair.Tpo $(DEPDIR)/libMADPPlanning_la-PartialJPPVIndexValuePair.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='PartialJPPVIndexValuePair.cpp' object='libMADPPlanning_la-PartialJPPVIndexValuePair.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libMADPPlanning_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libMADPPlanning_la-PartialJPPVIndexValuePair.lo `test -f 'PartialJPPVIndexValuePair.cpp' || echo '$(srcdir)/'`PartialJPPVIndexValuePair.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
	for dir in "$(DESTDIR)$(libdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-libLTLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
